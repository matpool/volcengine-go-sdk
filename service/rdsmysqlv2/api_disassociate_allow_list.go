// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDisassociateAllowListCommon = "DisassociateAllowList"

// DisassociateAllowListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DisassociateAllowListCommon operation. The "output" return
// value will be populated with the DisassociateAllowListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DisassociateAllowListCommon Request to send the API call to the service.
// the "output" return value is not valid until after DisassociateAllowListCommon Send returns without error.
//
// See DisassociateAllowListCommon for more information on using the DisassociateAllowListCommon
// API call, and error handling.
//
//    // Example sending a request using the DisassociateAllowListCommonRequest method.
//    req, resp := client.DisassociateAllowListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DisassociateAllowListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDisassociateAllowListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DisassociateAllowListCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DisassociateAllowListCommon for usage and error information.
func (c *RDSMYSQLV2) DisassociateAllowListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DisassociateAllowListCommonRequest(input)
	return out, req.Send()
}

// DisassociateAllowListCommonWithContext is the same as DisassociateAllowListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DisassociateAllowListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DisassociateAllowListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DisassociateAllowListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisassociateAllowList = "DisassociateAllowList"

// DisassociateAllowListRequest generates a "volcengine/request.Request" representing the
// client's request for the DisassociateAllowList operation. The "output" return
// value will be populated with the DisassociateAllowListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DisassociateAllowListCommon Request to send the API call to the service.
// the "output" return value is not valid until after DisassociateAllowListCommon Send returns without error.
//
// See DisassociateAllowList for more information on using the DisassociateAllowList
// API call, and error handling.
//
//    // Example sending a request using the DisassociateAllowListRequest method.
//    req, resp := client.DisassociateAllowListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DisassociateAllowListRequest(input *DisassociateAllowListInput) (req *request.Request, output *DisassociateAllowListOutput) {
	op := &request.Operation{
		Name:       opDisassociateAllowList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisassociateAllowListInput{}
	}

	output = &DisassociateAllowListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DisassociateAllowList API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DisassociateAllowList for usage and error information.
func (c *RDSMYSQLV2) DisassociateAllowList(input *DisassociateAllowListInput) (*DisassociateAllowListOutput, error) {
	req, out := c.DisassociateAllowListRequest(input)
	return out, req.Send()
}

// DisassociateAllowListWithContext is the same as DisassociateAllowList with the addition of
// the ability to pass a context and additional request options.
//
// See DisassociateAllowList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DisassociateAllowListWithContext(ctx volcengine.Context, input *DisassociateAllowListInput, opts ...request.Option) (*DisassociateAllowListOutput, error) {
	req, out := c.DisassociateAllowListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DisassociateAllowListInput struct {
	_ struct{} `type:"structure"`

	AllowListIds []*string `type:"list"`

	InstanceIds []*string `type:"list"`
}

// String returns the string representation
func (s DisassociateAllowListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateAllowListInput) GoString() string {
	return s.String()
}

// SetAllowListIds sets the AllowListIds field's value.
func (s *DisassociateAllowListInput) SetAllowListIds(v []*string) *DisassociateAllowListInput {
	s.AllowListIds = v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *DisassociateAllowListInput) SetInstanceIds(v []*string) *DisassociateAllowListInput {
	s.InstanceIds = v
	return s
}

type DisassociateAllowListOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DisassociateAllowListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateAllowListOutput) GoString() string {
	return s.String()
}
