// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysql

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyDBInstanceIPListCommon = "ModifyDBInstanceIPList"

// ModifyDBInstanceIPListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceIPListCommon operation. The "output" return
// value will be populated with the ModifyDBInstanceIPListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceIPListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceIPListCommon Send returns without error.
//
// See ModifyDBInstanceIPListCommon for more information on using the ModifyDBInstanceIPListCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceIPListCommonRequest method.
//    req, resp := client.ModifyDBInstanceIPListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQL) ModifyDBInstanceIPListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBInstanceIPListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceIPListCommon API operation for RDS_MYSQL.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL's
// API operation ModifyDBInstanceIPListCommon for usage and error information.
func (c *RDSMYSQL) ModifyDBInstanceIPListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceIPListCommonRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceIPListCommonWithContext is the same as ModifyDBInstanceIPListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceIPListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQL) ModifyDBInstanceIPListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceIPListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBInstanceIPList = "ModifyDBInstanceIPList"

// ModifyDBInstanceIPListRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceIPList operation. The "output" return
// value will be populated with the ModifyDBInstanceIPListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceIPListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceIPListCommon Send returns without error.
//
// See ModifyDBInstanceIPList for more information on using the ModifyDBInstanceIPList
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceIPListRequest method.
//    req, resp := client.ModifyDBInstanceIPListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQL) ModifyDBInstanceIPListRequest(input *ModifyDBInstanceIPListInput) (req *request.Request, output *ModifyDBInstanceIPListOutput) {
	op := &request.Operation{
		Name:       opModifyDBInstanceIPList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBInstanceIPListInput{}
	}

	output = &ModifyDBInstanceIPListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceIPList API operation for RDS_MYSQL.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL's
// API operation ModifyDBInstanceIPList for usage and error information.
func (c *RDSMYSQL) ModifyDBInstanceIPList(input *ModifyDBInstanceIPListInput) (*ModifyDBInstanceIPListOutput, error) {
	req, out := c.ModifyDBInstanceIPListRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceIPListWithContext is the same as ModifyDBInstanceIPList with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceIPList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQL) ModifyDBInstanceIPListWithContext(ctx volcengine.Context, input *ModifyDBInstanceIPListInput, opts ...request.Option) (*ModifyDBInstanceIPListOutput, error) {
	req, out := c.ModifyDBInstanceIPListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBInstanceIPListInput struct {
	_ struct{} `type:"structure"`

	// GroupName is a required field
	GroupName *string `min:"2" max:"120" type:"string" required:"true"`

	IPList []*string `type:"list"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyDBInstanceIPListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceIPListInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBInstanceIPListInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBInstanceIPListInput"}
	if s.GroupName == nil {
		invalidParams.Add(request.NewErrParamRequired("GroupName"))
	}
	if s.GroupName != nil && len(*s.GroupName) < 2 {
		invalidParams.Add(request.NewErrParamMinLen("GroupName", 2))
	}
	if s.GroupName != nil && len(*s.GroupName) > 120 {
		invalidParams.Add(request.NewErrParamMaxLen("GroupName", 120, *s.GroupName))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGroupName sets the GroupName field's value.
func (s *ModifyDBInstanceIPListInput) SetGroupName(v string) *ModifyDBInstanceIPListInput {
	s.GroupName = &v
	return s
}

// SetIPList sets the IPList field's value.
func (s *ModifyDBInstanceIPListInput) SetIPList(v []*string) *ModifyDBInstanceIPListInput {
	s.IPList = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBInstanceIPListInput) SetInstanceId(v string) *ModifyDBInstanceIPListInput {
	s.InstanceId = &v
	return s
}

type ModifyDBInstanceIPListOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyDBInstanceIPListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceIPListOutput) GoString() string {
	return s.String()
}
