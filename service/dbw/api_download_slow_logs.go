// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dbw

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDownloadSlowLogsCommon = "DownloadSlowLogs"

// DownloadSlowLogsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DownloadSlowLogsCommon operation. The "output" return
// value will be populated with the DownloadSlowLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DownloadSlowLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DownloadSlowLogsCommon Send returns without error.
//
// See DownloadSlowLogsCommon for more information on using the DownloadSlowLogsCommon
// API call, and error handling.
//
//    // Example sending a request using the DownloadSlowLogsCommonRequest method.
//    req, resp := client.DownloadSlowLogsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DBW) DownloadSlowLogsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDownloadSlowLogsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DownloadSlowLogsCommon API operation for DBW.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DBW's
// API operation DownloadSlowLogsCommon for usage and error information.
func (c *DBW) DownloadSlowLogsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DownloadSlowLogsCommonRequest(input)
	return out, req.Send()
}

// DownloadSlowLogsCommonWithContext is the same as DownloadSlowLogsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DownloadSlowLogsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DBW) DownloadSlowLogsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DownloadSlowLogsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDownloadSlowLogs = "DownloadSlowLogs"

// DownloadSlowLogsRequest generates a "volcengine/request.Request" representing the
// client's request for the DownloadSlowLogs operation. The "output" return
// value will be populated with the DownloadSlowLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DownloadSlowLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DownloadSlowLogsCommon Send returns without error.
//
// See DownloadSlowLogs for more information on using the DownloadSlowLogs
// API call, and error handling.
//
//    // Example sending a request using the DownloadSlowLogsRequest method.
//    req, resp := client.DownloadSlowLogsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DBW) DownloadSlowLogsRequest(input *DownloadSlowLogsInput) (req *request.Request, output *DownloadSlowLogsOutput) {
	op := &request.Operation{
		Name:       opDownloadSlowLogs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DownloadSlowLogsInput{}
	}

	output = &DownloadSlowLogsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DownloadSlowLogs API operation for DBW.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DBW's
// API operation DownloadSlowLogs for usage and error information.
func (c *DBW) DownloadSlowLogs(input *DownloadSlowLogsInput) (*DownloadSlowLogsOutput, error) {
	req, out := c.DownloadSlowLogsRequest(input)
	return out, req.Send()
}

// DownloadSlowLogsWithContext is the same as DownloadSlowLogs with the addition of
// the ability to pass a context and additional request options.
//
// See DownloadSlowLogs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DBW) DownloadSlowLogsWithContext(ctx volcengine.Context, input *DownloadSlowLogsInput, opts ...request.Option) (*DownloadSlowLogsOutput, error) {
	req, out := c.DownloadSlowLogsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DownloadSlowLogsInput struct {
	_ struct{} `type:"structure"`

	DSType *string `type:"string" enum:"EnumOfDSTypeForDownloadSlowLogsInput"`

	EndTime *int32 `type:"int32"`

	InstanceId *string `type:"string"`

	OrderBy *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	RegionId *string `type:"string"`

	SearchParam *SearchParamForDownloadSlowLogsInput `type:"structure"`

	SortBy *string `type:"string" enum:"EnumOfSortByForDownloadSlowLogsInput"`

	StartTime *int32 `type:"int32"`
}

// String returns the string representation
func (s DownloadSlowLogsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DownloadSlowLogsInput) GoString() string {
	return s.String()
}

// SetDSType sets the DSType field's value.
func (s *DownloadSlowLogsInput) SetDSType(v string) *DownloadSlowLogsInput {
	s.DSType = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DownloadSlowLogsInput) SetEndTime(v int32) *DownloadSlowLogsInput {
	s.EndTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DownloadSlowLogsInput) SetInstanceId(v string) *DownloadSlowLogsInput {
	s.InstanceId = &v
	return s
}

// SetOrderBy sets the OrderBy field's value.
func (s *DownloadSlowLogsInput) SetOrderBy(v string) *DownloadSlowLogsInput {
	s.OrderBy = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DownloadSlowLogsInput) SetPageNumber(v int32) *DownloadSlowLogsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DownloadSlowLogsInput) SetPageSize(v int32) *DownloadSlowLogsInput {
	s.PageSize = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DownloadSlowLogsInput) SetRegionId(v string) *DownloadSlowLogsInput {
	s.RegionId = &v
	return s
}

// SetSearchParam sets the SearchParam field's value.
func (s *DownloadSlowLogsInput) SetSearchParam(v *SearchParamForDownloadSlowLogsInput) *DownloadSlowLogsInput {
	s.SearchParam = v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *DownloadSlowLogsInput) SetSortBy(v string) *DownloadSlowLogsInput {
	s.SortBy = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DownloadSlowLogsInput) SetStartTime(v int32) *DownloadSlowLogsInput {
	s.StartTime = &v
	return s
}

type DownloadSlowLogsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	FileURL *string `type:"string"`
}

// String returns the string representation
func (s DownloadSlowLogsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DownloadSlowLogsOutput) GoString() string {
	return s.String()
}

// SetFileURL sets the FileURL field's value.
func (s *DownloadSlowLogsOutput) SetFileURL(v string) *DownloadSlowLogsOutput {
	s.FileURL = &v
	return s
}

type SearchParamForDownloadSlowLogsInput struct {
	_ struct{} `type:"structure"`

	DBs []*string `type:"list"`

	GroupIgnored []*string `type:"list"`

	Keywords []*string `type:"list"`

	MaxQueryTime *float64 `type:"double"`

	MinQueryTime *float64 `type:"double"`

	SourceIPs []*string `type:"list"`

	Users []*string `type:"list"`
}

// String returns the string representation
func (s SearchParamForDownloadSlowLogsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SearchParamForDownloadSlowLogsInput) GoString() string {
	return s.String()
}

// SetDBs sets the DBs field's value.
func (s *SearchParamForDownloadSlowLogsInput) SetDBs(v []*string) *SearchParamForDownloadSlowLogsInput {
	s.DBs = v
	return s
}

// SetGroupIgnored sets the GroupIgnored field's value.
func (s *SearchParamForDownloadSlowLogsInput) SetGroupIgnored(v []*string) *SearchParamForDownloadSlowLogsInput {
	s.GroupIgnored = v
	return s
}

// SetKeywords sets the Keywords field's value.
func (s *SearchParamForDownloadSlowLogsInput) SetKeywords(v []*string) *SearchParamForDownloadSlowLogsInput {
	s.Keywords = v
	return s
}

// SetMaxQueryTime sets the MaxQueryTime field's value.
func (s *SearchParamForDownloadSlowLogsInput) SetMaxQueryTime(v float64) *SearchParamForDownloadSlowLogsInput {
	s.MaxQueryTime = &v
	return s
}

// SetMinQueryTime sets the MinQueryTime field's value.
func (s *SearchParamForDownloadSlowLogsInput) SetMinQueryTime(v float64) *SearchParamForDownloadSlowLogsInput {
	s.MinQueryTime = &v
	return s
}

// SetSourceIPs sets the SourceIPs field's value.
func (s *SearchParamForDownloadSlowLogsInput) SetSourceIPs(v []*string) *SearchParamForDownloadSlowLogsInput {
	s.SourceIPs = v
	return s
}

// SetUsers sets the Users field's value.
func (s *SearchParamForDownloadSlowLogsInput) SetUsers(v []*string) *SearchParamForDownloadSlowLogsInput {
	s.Users = v
	return s
}

const (
	// EnumOfDSTypeForDownloadSlowLogsInputMongo is a EnumOfDSTypeForDownloadSlowLogsInput enum value
	EnumOfDSTypeForDownloadSlowLogsInputMongo = "Mongo"

	// EnumOfDSTypeForDownloadSlowLogsInputMySql is a EnumOfDSTypeForDownloadSlowLogsInput enum value
	EnumOfDSTypeForDownloadSlowLogsInputMySql = "MySQL"

	// EnumOfDSTypeForDownloadSlowLogsInputPostgres is a EnumOfDSTypeForDownloadSlowLogsInput enum value
	EnumOfDSTypeForDownloadSlowLogsInputPostgres = "Postgres"

	// EnumOfDSTypeForDownloadSlowLogsInputRedis is a EnumOfDSTypeForDownloadSlowLogsInput enum value
	EnumOfDSTypeForDownloadSlowLogsInputRedis = "Redis"

	// EnumOfDSTypeForDownloadSlowLogsInputVeDbmySql is a EnumOfDSTypeForDownloadSlowLogsInput enum value
	EnumOfDSTypeForDownloadSlowLogsInputVeDbmySql = "VeDBMySQL"
)

const (
	// EnumOfSortByForDownloadSlowLogsInputAsc is a EnumOfSortByForDownloadSlowLogsInput enum value
	EnumOfSortByForDownloadSlowLogsInputAsc = "ASC"

	// EnumOfSortByForDownloadSlowLogsInputDesc is a EnumOfSortByForDownloadSlowLogsInput enum value
	EnumOfSortByForDownloadSlowLogsInputDesc = "DESC"
)
