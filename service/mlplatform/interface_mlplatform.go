// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package mlplatformiface provides an interface to enable mocking the ML_PLATFORM service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package mlplatform

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
)

// MLPLATFORMAPI provides an interface to enable mocking the
// mlplatform.MLPLATFORM service client's API operation,
//
//	// volcengine sdk func uses an SDK service client to make a request to
//	// ML_PLATFORM.
//	func myFunc(svc MLPLATFORMAPI) bool {
//	    // Make svc.CreateDevInstance request
//	}
//
//	func main() {
//	    sess := session.New()
//	    svc := mlplatform.New(sess)
//
//	    myFunc(svc)
//	}
type MLPLATFORMAPI interface {
	CreateDevInstanceCommon(*map[string]interface{}) (*map[string]interface{}, error)
	CreateDevInstanceCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateDevInstanceCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateDevInstance(*CreateDevInstanceInput) (*CreateDevInstanceOutput, error)
	CreateDevInstanceWithContext(volcengine.Context, *CreateDevInstanceInput, ...request.Option) (*CreateDevInstanceOutput, error)
	CreateDevInstanceRequest(*CreateDevInstanceInput) (*request.Request, *CreateDevInstanceOutput)

	DeleteDevInstanceCommon(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteDevInstanceCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteDevInstanceCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteDevInstance(*DeleteDevInstanceInput) (*DeleteDevInstanceOutput, error)
	DeleteDevInstanceWithContext(volcengine.Context, *DeleteDevInstanceInput, ...request.Option) (*DeleteDevInstanceOutput, error)
	DeleteDevInstanceRequest(*DeleteDevInstanceInput) (*request.Request, *DeleteDevInstanceOutput)

	GetDevInstanceCommon(*map[string]interface{}) (*map[string]interface{}, error)
	GetDevInstanceCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetDevInstanceCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetDevInstance(*GetDevInstanceInput) (*GetDevInstanceOutput, error)
	GetDevInstanceWithContext(volcengine.Context, *GetDevInstanceInput, ...request.Option) (*GetDevInstanceOutput, error)
	GetDevInstanceRequest(*GetDevInstanceInput) (*request.Request, *GetDevInstanceOutput)

	GetPrivateNetworkConfigCommon(*map[string]interface{}) (*map[string]interface{}, error)
	GetPrivateNetworkConfigCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetPrivateNetworkConfigCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetPrivateNetworkConfig(*GetPrivateNetworkConfigInput) (*GetPrivateNetworkConfigOutput, error)
	GetPrivateNetworkConfigWithContext(volcengine.Context, *GetPrivateNetworkConfigInput, ...request.Option) (*GetPrivateNetworkConfigOutput, error)
	GetPrivateNetworkConfigRequest(*GetPrivateNetworkConfigInput) (*request.Request, *GetPrivateNetworkConfigOutput)

	ListDevInstancesCommon(*map[string]interface{}) (*map[string]interface{}, error)
	ListDevInstancesCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListDevInstancesCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListDevInstances(*ListDevInstancesInput) (*ListDevInstancesOutput, error)
	ListDevInstancesWithContext(volcengine.Context, *ListDevInstancesInput, ...request.Option) (*ListDevInstancesOutput, error)
	ListDevInstancesRequest(*ListDevInstancesInput) (*request.Request, *ListDevInstancesOutput)

	RebootDevInstanceCommon(*map[string]interface{}) (*map[string]interface{}, error)
	RebootDevInstanceCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	RebootDevInstanceCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	RebootDevInstance(*RebootDevInstanceInput) (*RebootDevInstanceOutput, error)
	RebootDevInstanceWithContext(volcengine.Context, *RebootDevInstanceInput, ...request.Option) (*RebootDevInstanceOutput, error)
	RebootDevInstanceRequest(*RebootDevInstanceInput) (*request.Request, *RebootDevInstanceOutput)

	StartDevInstanceCommon(*map[string]interface{}) (*map[string]interface{}, error)
	StartDevInstanceCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	StartDevInstanceCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	StartDevInstance(*StartDevInstanceInput) (*StartDevInstanceOutput, error)
	StartDevInstanceWithContext(volcengine.Context, *StartDevInstanceInput, ...request.Option) (*StartDevInstanceOutput, error)
	StartDevInstanceRequest(*StartDevInstanceInput) (*request.Request, *StartDevInstanceOutput)

	StopDevInstanceCommon(*map[string]interface{}) (*map[string]interface{}, error)
	StopDevInstanceCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	StopDevInstanceCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	StopDevInstance(*StopDevInstanceInput) (*StopDevInstanceOutput, error)
	StopDevInstanceWithContext(volcengine.Context, *StopDevInstanceInput, ...request.Option) (*StopDevInstanceOutput, error)
	StopDevInstanceRequest(*StopDevInstanceInput) (*request.Request, *StopDevInstanceOutput)

	UpdateDevInstanceCommon(*map[string]interface{}) (*map[string]interface{}, error)
	UpdateDevInstanceCommonWithContext(volcengine.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	UpdateDevInstanceCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	UpdateDevInstance(*UpdateDevInstanceInput) (*UpdateDevInstanceOutput, error)
	UpdateDevInstanceWithContext(volcengine.Context, *UpdateDevInstanceInput, ...request.Option) (*UpdateDevInstanceOutput, error)
	UpdateDevInstanceRequest(*UpdateDevInstanceInput) (*request.Request, *UpdateDevInstanceOutput)
}

var _ MLPLATFORMAPI = (*MLPLATFORM)(nil)
