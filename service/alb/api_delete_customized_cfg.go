// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package alb

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteCustomizedCfgCommon = "DeleteCustomizedCfg"

// DeleteCustomizedCfgCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteCustomizedCfgCommon operation. The "output" return
// value will be populated with the DeleteCustomizedCfgCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteCustomizedCfgCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteCustomizedCfgCommon Send returns without error.
//
// See DeleteCustomizedCfgCommon for more information on using the DeleteCustomizedCfgCommon
// API call, and error handling.
//
//	// Example sending a request using the DeleteCustomizedCfgCommonRequest method.
//	req, resp := client.DeleteCustomizedCfgCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ALB) DeleteCustomizedCfgCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteCustomizedCfgCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteCustomizedCfgCommon API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation DeleteCustomizedCfgCommon for usage and error information.
func (c *ALB) DeleteCustomizedCfgCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteCustomizedCfgCommonRequest(input)
	return out, req.Send()
}

// DeleteCustomizedCfgCommonWithContext is the same as DeleteCustomizedCfgCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCustomizedCfgCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) DeleteCustomizedCfgCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteCustomizedCfgCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteCustomizedCfg = "DeleteCustomizedCfg"

// DeleteCustomizedCfgRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteCustomizedCfg operation. The "output" return
// value will be populated with the DeleteCustomizedCfgCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteCustomizedCfgCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteCustomizedCfgCommon Send returns without error.
//
// See DeleteCustomizedCfg for more information on using the DeleteCustomizedCfg
// API call, and error handling.
//
//	// Example sending a request using the DeleteCustomizedCfgRequest method.
//	req, resp := client.DeleteCustomizedCfgRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ALB) DeleteCustomizedCfgRequest(input *DeleteCustomizedCfgInput) (req *request.Request, output *DeleteCustomizedCfgOutput) {
	op := &request.Operation{
		Name:       opDeleteCustomizedCfg,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteCustomizedCfgInput{}
	}

	output = &DeleteCustomizedCfgOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteCustomizedCfg API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation DeleteCustomizedCfg for usage and error information.
func (c *ALB) DeleteCustomizedCfg(input *DeleteCustomizedCfgInput) (*DeleteCustomizedCfgOutput, error) {
	req, out := c.DeleteCustomizedCfgRequest(input)
	return out, req.Send()
}

// DeleteCustomizedCfgWithContext is the same as DeleteCustomizedCfg with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCustomizedCfg for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) DeleteCustomizedCfgWithContext(ctx volcengine.Context, input *DeleteCustomizedCfgInput, opts ...request.Option) (*DeleteCustomizedCfgOutput, error) {
	req, out := c.DeleteCustomizedCfgRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteCustomizedCfgInput struct {
	_ struct{} `type:"structure"`

	// CustomizedCfgId is a required field
	CustomizedCfgId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteCustomizedCfgInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCustomizedCfgInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteCustomizedCfgInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteCustomizedCfgInput"}
	if s.CustomizedCfgId == nil {
		invalidParams.Add(request.NewErrParamRequired("CustomizedCfgId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCustomizedCfgId sets the CustomizedCfgId field's value.
func (s *DeleteCustomizedCfgInput) SetCustomizedCfgId(v string) *DeleteCustomizedCfgInput {
	s.CustomizedCfgId = &v
	return s
}

type DeleteCustomizedCfgOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DeleteCustomizedCfgOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCustomizedCfgOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteCustomizedCfgOutput) SetRequestId(v string) *DeleteCustomizedCfgOutput {
	s.RequestId = &v
	return s
}
