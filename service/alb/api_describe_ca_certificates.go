// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package alb

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeCACertificatesCommon = "DescribeCACertificates"

// DescribeCACertificatesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCACertificatesCommon operation. The "output" return
// value will be populated with the DescribeCACertificatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCACertificatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCACertificatesCommon Send returns without error.
//
// See DescribeCACertificatesCommon for more information on using the DescribeCACertificatesCommon
// API call, and error handling.
//
//	// Example sending a request using the DescribeCACertificatesCommonRequest method.
//	req, resp := client.DescribeCACertificatesCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ALB) DescribeCACertificatesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCACertificatesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeCACertificatesCommon API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation DescribeCACertificatesCommon for usage and error information.
func (c *ALB) DescribeCACertificatesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCACertificatesCommonRequest(input)
	return out, req.Send()
}

// DescribeCACertificatesCommonWithContext is the same as DescribeCACertificatesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCACertificatesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) DescribeCACertificatesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCACertificatesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCACertificates = "DescribeCACertificates"

// DescribeCACertificatesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCACertificates operation. The "output" return
// value will be populated with the DescribeCACertificatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCACertificatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCACertificatesCommon Send returns without error.
//
// See DescribeCACertificates for more information on using the DescribeCACertificates
// API call, and error handling.
//
//	// Example sending a request using the DescribeCACertificatesRequest method.
//	req, resp := client.DescribeCACertificatesRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ALB) DescribeCACertificatesRequest(input *DescribeCACertificatesInput) (req *request.Request, output *DescribeCACertificatesOutput) {
	op := &request.Operation{
		Name:       opDescribeCACertificates,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCACertificatesInput{}
	}

	output = &DescribeCACertificatesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeCACertificates API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation DescribeCACertificates for usage and error information.
func (c *ALB) DescribeCACertificates(input *DescribeCACertificatesInput) (*DescribeCACertificatesOutput, error) {
	req, out := c.DescribeCACertificatesRequest(input)
	return out, req.Send()
}

// DescribeCACertificatesWithContext is the same as DescribeCACertificates with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCACertificates for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) DescribeCACertificatesWithContext(ctx volcengine.Context, input *DescribeCACertificatesInput, opts ...request.Option) (*DescribeCACertificatesOutput, error) {
	req, out := c.DescribeCACertificatesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CACertificateForDescribeCACertificatesOutput struct {
	_ struct{} `type:"structure"`

	CACertificateId *string `type:"string"`

	CACertificateName *string `type:"string"`

	CertificateType *string `type:"string"`

	CreateTime *string `type:"string"`

	Description *string `type:"string"`

	DomainName *string `type:"string"`

	ExpiredAt *string `type:"string"`

	Listeners []*string `type:"list"`

	ProjectName *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s CACertificateForDescribeCACertificatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CACertificateForDescribeCACertificatesOutput) GoString() string {
	return s.String()
}

// SetCACertificateId sets the CACertificateId field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetCACertificateId(v string) *CACertificateForDescribeCACertificatesOutput {
	s.CACertificateId = &v
	return s
}

// SetCACertificateName sets the CACertificateName field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetCACertificateName(v string) *CACertificateForDescribeCACertificatesOutput {
	s.CACertificateName = &v
	return s
}

// SetCertificateType sets the CertificateType field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetCertificateType(v string) *CACertificateForDescribeCACertificatesOutput {
	s.CertificateType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetCreateTime(v string) *CACertificateForDescribeCACertificatesOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetDescription(v string) *CACertificateForDescribeCACertificatesOutput {
	s.Description = &v
	return s
}

// SetDomainName sets the DomainName field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetDomainName(v string) *CACertificateForDescribeCACertificatesOutput {
	s.DomainName = &v
	return s
}

// SetExpiredAt sets the ExpiredAt field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetExpiredAt(v string) *CACertificateForDescribeCACertificatesOutput {
	s.ExpiredAt = &v
	return s
}

// SetListeners sets the Listeners field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetListeners(v []*string) *CACertificateForDescribeCACertificatesOutput {
	s.Listeners = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetProjectName(v string) *CACertificateForDescribeCACertificatesOutput {
	s.ProjectName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CACertificateForDescribeCACertificatesOutput) SetStatus(v string) *CACertificateForDescribeCACertificatesOutput {
	s.Status = &v
	return s
}

type DescribeCACertificatesInput struct {
	_ struct{} `type:"structure"`

	CACertificateIds []*string `type:"list"`

	CACertificateName *string `type:"string"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	ProjectName *string `type:"string"`
}

// String returns the string representation
func (s DescribeCACertificatesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCACertificatesInput) GoString() string {
	return s.String()
}

// SetCACertificateIds sets the CACertificateIds field's value.
func (s *DescribeCACertificatesInput) SetCACertificateIds(v []*string) *DescribeCACertificatesInput {
	s.CACertificateIds = v
	return s
}

// SetCACertificateName sets the CACertificateName field's value.
func (s *DescribeCACertificatesInput) SetCACertificateName(v string) *DescribeCACertificatesInput {
	s.CACertificateName = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeCACertificatesInput) SetPageNumber(v int64) *DescribeCACertificatesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeCACertificatesInput) SetPageSize(v int64) *DescribeCACertificatesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeCACertificatesInput) SetProjectName(v string) *DescribeCACertificatesInput {
	s.ProjectName = &v
	return s
}

type DescribeCACertificatesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CACertificates []*CACertificateForDescribeCACertificatesOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeCACertificatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCACertificatesOutput) GoString() string {
	return s.String()
}

// SetCACertificates sets the CACertificates field's value.
func (s *DescribeCACertificatesOutput) SetCACertificates(v []*CACertificateForDescribeCACertificatesOutput) *DescribeCACertificatesOutput {
	s.CACertificates = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeCACertificatesOutput) SetPageNumber(v int64) *DescribeCACertificatesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeCACertificatesOutput) SetPageSize(v int64) *DescribeCACertificatesOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeCACertificatesOutput) SetRequestId(v string) *DescribeCACertificatesOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeCACertificatesOutput) SetTotalCount(v int64) *DescribeCACertificatesOutput {
	s.TotalCount = &v
	return s
}
