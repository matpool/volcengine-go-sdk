// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package natgateway

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDnatEntriesCommon = "DescribeDnatEntries"

// DescribeDnatEntriesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDnatEntriesCommon operation. The "output" return
// value will be populated with the DescribeDnatEntriesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDnatEntriesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDnatEntriesCommon Send returns without error.
//
// See DescribeDnatEntriesCommon for more information on using the DescribeDnatEntriesCommon
// API call, and error handling.
//
//	// Example sending a request using the DescribeDnatEntriesCommonRequest method.
//	req, resp := client.DescribeDnatEntriesCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *NATGATEWAY) DescribeDnatEntriesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDnatEntriesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDnatEntriesCommon API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation DescribeDnatEntriesCommon for usage and error information.
func (c *NATGATEWAY) DescribeDnatEntriesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDnatEntriesCommonRequest(input)
	return out, req.Send()
}

// DescribeDnatEntriesCommonWithContext is the same as DescribeDnatEntriesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDnatEntriesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) DescribeDnatEntriesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDnatEntriesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDnatEntries = "DescribeDnatEntries"

// DescribeDnatEntriesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDnatEntries operation. The "output" return
// value will be populated with the DescribeDnatEntriesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDnatEntriesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDnatEntriesCommon Send returns without error.
//
// See DescribeDnatEntries for more information on using the DescribeDnatEntries
// API call, and error handling.
//
//	// Example sending a request using the DescribeDnatEntriesRequest method.
//	req, resp := client.DescribeDnatEntriesRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *NATGATEWAY) DescribeDnatEntriesRequest(input *DescribeDnatEntriesInput) (req *request.Request, output *DescribeDnatEntriesOutput) {
	op := &request.Operation{
		Name:       opDescribeDnatEntries,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDnatEntriesInput{}
	}

	output = &DescribeDnatEntriesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDnatEntries API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation DescribeDnatEntries for usage and error information.
func (c *NATGATEWAY) DescribeDnatEntries(input *DescribeDnatEntriesInput) (*DescribeDnatEntriesOutput, error) {
	req, out := c.DescribeDnatEntriesRequest(input)
	return out, req.Send()
}

// DescribeDnatEntriesWithContext is the same as DescribeDnatEntries with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDnatEntries for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) DescribeDnatEntriesWithContext(ctx volcengine.Context, input *DescribeDnatEntriesInput, opts ...request.Option) (*DescribeDnatEntriesOutput, error) {
	req, out := c.DescribeDnatEntriesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDnatEntriesInput struct {
	_ struct{} `type:"structure"`

	DnatEntryIds []*string `type:"list"`

	DnatEntryName *string `type:"string"`

	ExternalIp *string `type:"string"`

	ExternalPort *string `type:"string"`

	InternalIp *string `type:"string"`

	InternalPort *string `type:"string"`

	NatGatewayId *string `type:"string"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `max:"100" type:"integer"`

	Protocol *string `type:"string"`
}

// String returns the string representation
func (s DescribeDnatEntriesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDnatEntriesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDnatEntriesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDnatEntriesInput"}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDnatEntryIds sets the DnatEntryIds field's value.
func (s *DescribeDnatEntriesInput) SetDnatEntryIds(v []*string) *DescribeDnatEntriesInput {
	s.DnatEntryIds = v
	return s
}

// SetDnatEntryName sets the DnatEntryName field's value.
func (s *DescribeDnatEntriesInput) SetDnatEntryName(v string) *DescribeDnatEntriesInput {
	s.DnatEntryName = &v
	return s
}

// SetExternalIp sets the ExternalIp field's value.
func (s *DescribeDnatEntriesInput) SetExternalIp(v string) *DescribeDnatEntriesInput {
	s.ExternalIp = &v
	return s
}

// SetExternalPort sets the ExternalPort field's value.
func (s *DescribeDnatEntriesInput) SetExternalPort(v string) *DescribeDnatEntriesInput {
	s.ExternalPort = &v
	return s
}

// SetInternalIp sets the InternalIp field's value.
func (s *DescribeDnatEntriesInput) SetInternalIp(v string) *DescribeDnatEntriesInput {
	s.InternalIp = &v
	return s
}

// SetInternalPort sets the InternalPort field's value.
func (s *DescribeDnatEntriesInput) SetInternalPort(v string) *DescribeDnatEntriesInput {
	s.InternalPort = &v
	return s
}

// SetNatGatewayId sets the NatGatewayId field's value.
func (s *DescribeDnatEntriesInput) SetNatGatewayId(v string) *DescribeDnatEntriesInput {
	s.NatGatewayId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDnatEntriesInput) SetPageNumber(v int64) *DescribeDnatEntriesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDnatEntriesInput) SetPageSize(v int64) *DescribeDnatEntriesInput {
	s.PageSize = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DescribeDnatEntriesInput) SetProtocol(v string) *DescribeDnatEntriesInput {
	s.Protocol = &v
	return s
}

type DescribeDnatEntriesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DnatEntries []*DnatEntryForDescribeDnatEntriesOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeDnatEntriesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDnatEntriesOutput) GoString() string {
	return s.String()
}

// SetDnatEntries sets the DnatEntries field's value.
func (s *DescribeDnatEntriesOutput) SetDnatEntries(v []*DnatEntryForDescribeDnatEntriesOutput) *DescribeDnatEntriesOutput {
	s.DnatEntries = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDnatEntriesOutput) SetPageNumber(v int64) *DescribeDnatEntriesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDnatEntriesOutput) SetPageSize(v int64) *DescribeDnatEntriesOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeDnatEntriesOutput) SetRequestId(v string) *DescribeDnatEntriesOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeDnatEntriesOutput) SetTotalCount(v int64) *DescribeDnatEntriesOutput {
	s.TotalCount = &v
	return s
}

type DnatEntryForDescribeDnatEntriesOutput struct {
	_ struct{} `type:"structure"`

	DnatEntryId *string `type:"string"`

	DnatEntryName *string `type:"string"`

	ExternalIp *string `type:"string"`

	ExternalPort *string `type:"string"`

	InternalIp *string `type:"string"`

	InternalPort *string `type:"string"`

	NatGatewayId *string `type:"string"`

	Protocol *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s DnatEntryForDescribeDnatEntriesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DnatEntryForDescribeDnatEntriesOutput) GoString() string {
	return s.String()
}

// SetDnatEntryId sets the DnatEntryId field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetDnatEntryId(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.DnatEntryId = &v
	return s
}

// SetDnatEntryName sets the DnatEntryName field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetDnatEntryName(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.DnatEntryName = &v
	return s
}

// SetExternalIp sets the ExternalIp field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetExternalIp(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.ExternalIp = &v
	return s
}

// SetExternalPort sets the ExternalPort field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetExternalPort(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.ExternalPort = &v
	return s
}

// SetInternalIp sets the InternalIp field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetInternalIp(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.InternalIp = &v
	return s
}

// SetInternalPort sets the InternalPort field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetInternalPort(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.InternalPort = &v
	return s
}

// SetNatGatewayId sets the NatGatewayId field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetNatGatewayId(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.NatGatewayId = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetProtocol(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.Protocol = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DnatEntryForDescribeDnatEntriesOutput) SetStatus(v string) *DnatEntryForDescribeDnatEntriesOutput {
	s.Status = &v
	return s
}
