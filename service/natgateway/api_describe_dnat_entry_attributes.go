// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package natgateway

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDnatEntryAttributesCommon = "DescribeDnatEntryAttributes"

// DescribeDnatEntryAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDnatEntryAttributesCommon operation. The "output" return
// value will be populated with the DescribeDnatEntryAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDnatEntryAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDnatEntryAttributesCommon Send returns without error.
//
// See DescribeDnatEntryAttributesCommon for more information on using the DescribeDnatEntryAttributesCommon
// API call, and error handling.
//
//	// Example sending a request using the DescribeDnatEntryAttributesCommonRequest method.
//	req, resp := client.DescribeDnatEntryAttributesCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *NATGATEWAY) DescribeDnatEntryAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDnatEntryAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDnatEntryAttributesCommon API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation DescribeDnatEntryAttributesCommon for usage and error information.
func (c *NATGATEWAY) DescribeDnatEntryAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDnatEntryAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeDnatEntryAttributesCommonWithContext is the same as DescribeDnatEntryAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDnatEntryAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) DescribeDnatEntryAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDnatEntryAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDnatEntryAttributes = "DescribeDnatEntryAttributes"

// DescribeDnatEntryAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDnatEntryAttributes operation. The "output" return
// value will be populated with the DescribeDnatEntryAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDnatEntryAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDnatEntryAttributesCommon Send returns without error.
//
// See DescribeDnatEntryAttributes for more information on using the DescribeDnatEntryAttributes
// API call, and error handling.
//
//	// Example sending a request using the DescribeDnatEntryAttributesRequest method.
//	req, resp := client.DescribeDnatEntryAttributesRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *NATGATEWAY) DescribeDnatEntryAttributesRequest(input *DescribeDnatEntryAttributesInput) (req *request.Request, output *DescribeDnatEntryAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeDnatEntryAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDnatEntryAttributesInput{}
	}

	output = &DescribeDnatEntryAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDnatEntryAttributes API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation DescribeDnatEntryAttributes for usage and error information.
func (c *NATGATEWAY) DescribeDnatEntryAttributes(input *DescribeDnatEntryAttributesInput) (*DescribeDnatEntryAttributesOutput, error) {
	req, out := c.DescribeDnatEntryAttributesRequest(input)
	return out, req.Send()
}

// DescribeDnatEntryAttributesWithContext is the same as DescribeDnatEntryAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDnatEntryAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) DescribeDnatEntryAttributesWithContext(ctx volcengine.Context, input *DescribeDnatEntryAttributesInput, opts ...request.Option) (*DescribeDnatEntryAttributesOutput, error) {
	req, out := c.DescribeDnatEntryAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDnatEntryAttributesInput struct {
	_ struct{} `type:"structure"`

	// DnatEntryId is a required field
	DnatEntryId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeDnatEntryAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDnatEntryAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDnatEntryAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDnatEntryAttributesInput"}
	if s.DnatEntryId == nil {
		invalidParams.Add(request.NewErrParamRequired("DnatEntryId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDnatEntryId sets the DnatEntryId field's value.
func (s *DescribeDnatEntryAttributesInput) SetDnatEntryId(v string) *DescribeDnatEntryAttributesInput {
	s.DnatEntryId = &v
	return s
}

type DescribeDnatEntryAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DnatEntryId *string `type:"string"`

	DnatEntryName *string `type:"string"`

	ExternalIp *string `type:"string"`

	ExternalPort *string `type:"string"`

	InternalIp *string `type:"string"`

	InternalPort *string `type:"string"`

	NatGatewayId *string `type:"string"`

	Protocol *string `type:"string"`

	RequestId *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s DescribeDnatEntryAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDnatEntryAttributesOutput) GoString() string {
	return s.String()
}

// SetDnatEntryId sets the DnatEntryId field's value.
func (s *DescribeDnatEntryAttributesOutput) SetDnatEntryId(v string) *DescribeDnatEntryAttributesOutput {
	s.DnatEntryId = &v
	return s
}

// SetDnatEntryName sets the DnatEntryName field's value.
func (s *DescribeDnatEntryAttributesOutput) SetDnatEntryName(v string) *DescribeDnatEntryAttributesOutput {
	s.DnatEntryName = &v
	return s
}

// SetExternalIp sets the ExternalIp field's value.
func (s *DescribeDnatEntryAttributesOutput) SetExternalIp(v string) *DescribeDnatEntryAttributesOutput {
	s.ExternalIp = &v
	return s
}

// SetExternalPort sets the ExternalPort field's value.
func (s *DescribeDnatEntryAttributesOutput) SetExternalPort(v string) *DescribeDnatEntryAttributesOutput {
	s.ExternalPort = &v
	return s
}

// SetInternalIp sets the InternalIp field's value.
func (s *DescribeDnatEntryAttributesOutput) SetInternalIp(v string) *DescribeDnatEntryAttributesOutput {
	s.InternalIp = &v
	return s
}

// SetInternalPort sets the InternalPort field's value.
func (s *DescribeDnatEntryAttributesOutput) SetInternalPort(v string) *DescribeDnatEntryAttributesOutput {
	s.InternalPort = &v
	return s
}

// SetNatGatewayId sets the NatGatewayId field's value.
func (s *DescribeDnatEntryAttributesOutput) SetNatGatewayId(v string) *DescribeDnatEntryAttributesOutput {
	s.NatGatewayId = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DescribeDnatEntryAttributesOutput) SetProtocol(v string) *DescribeDnatEntryAttributesOutput {
	s.Protocol = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeDnatEntryAttributesOutput) SetRequestId(v string) *DescribeDnatEntryAttributesOutput {
	s.RequestId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeDnatEntryAttributesOutput) SetStatus(v string) *DescribeDnatEntryAttributesOutput {
	s.Status = &v
	return s
}
