// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateHealthCheckLogProjectCommon = "CreateHealthCheckLogProject"

// CreateHealthCheckLogProjectCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateHealthCheckLogProjectCommon operation. The "output" return
// value will be populated with the CreateHealthCheckLogProjectCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateHealthCheckLogProjectCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateHealthCheckLogProjectCommon Send returns without error.
//
// See CreateHealthCheckLogProjectCommon for more information on using the CreateHealthCheckLogProjectCommon
// API call, and error handling.
//
//	// Example sending a request using the CreateHealthCheckLogProjectCommonRequest method.
//	req, resp := client.CreateHealthCheckLogProjectCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *CLB) CreateHealthCheckLogProjectCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateHealthCheckLogProjectCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateHealthCheckLogProjectCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation CreateHealthCheckLogProjectCommon for usage and error information.
func (c *CLB) CreateHealthCheckLogProjectCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateHealthCheckLogProjectCommonRequest(input)
	return out, req.Send()
}

// CreateHealthCheckLogProjectCommonWithContext is the same as CreateHealthCheckLogProjectCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateHealthCheckLogProjectCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) CreateHealthCheckLogProjectCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateHealthCheckLogProjectCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateHealthCheckLogProject = "CreateHealthCheckLogProject"

// CreateHealthCheckLogProjectRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateHealthCheckLogProject operation. The "output" return
// value will be populated with the CreateHealthCheckLogProjectCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateHealthCheckLogProjectCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateHealthCheckLogProjectCommon Send returns without error.
//
// See CreateHealthCheckLogProject for more information on using the CreateHealthCheckLogProject
// API call, and error handling.
//
//	// Example sending a request using the CreateHealthCheckLogProjectRequest method.
//	req, resp := client.CreateHealthCheckLogProjectRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *CLB) CreateHealthCheckLogProjectRequest(input *CreateHealthCheckLogProjectInput) (req *request.Request, output *CreateHealthCheckLogProjectOutput) {
	op := &request.Operation{
		Name:       opCreateHealthCheckLogProject,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateHealthCheckLogProjectInput{}
	}

	output = &CreateHealthCheckLogProjectOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateHealthCheckLogProject API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation CreateHealthCheckLogProject for usage and error information.
func (c *CLB) CreateHealthCheckLogProject(input *CreateHealthCheckLogProjectInput) (*CreateHealthCheckLogProjectOutput, error) {
	req, out := c.CreateHealthCheckLogProjectRequest(input)
	return out, req.Send()
}

// CreateHealthCheckLogProjectWithContext is the same as CreateHealthCheckLogProject with the addition of
// the ability to pass a context and additional request options.
//
// See CreateHealthCheckLogProject for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) CreateHealthCheckLogProjectWithContext(ctx volcengine.Context, input *CreateHealthCheckLogProjectInput, opts ...request.Option) (*CreateHealthCheckLogProjectOutput, error) {
	req, out := c.CreateHealthCheckLogProjectRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateHealthCheckLogProjectInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s CreateHealthCheckLogProjectInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateHealthCheckLogProjectInput) GoString() string {
	return s.String()
}

type CreateHealthCheckLogProjectOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LogProjectId *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s CreateHealthCheckLogProjectOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateHealthCheckLogProjectOutput) GoString() string {
	return s.String()
}

// SetLogProjectId sets the LogProjectId field's value.
func (s *CreateHealthCheckLogProjectOutput) SetLogProjectId(v string) *CreateHealthCheckLogProjectOutput {
	s.LogProjectId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateHealthCheckLogProjectOutput) SetRequestId(v string) *CreateHealthCheckLogProjectOutput {
	s.RequestId = &v
	return s
}
