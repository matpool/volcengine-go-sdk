// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeHealthCheckLogTopicAttributesCommon = "DescribeHealthCheckLogTopicAttributes"

// DescribeHealthCheckLogTopicAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeHealthCheckLogTopicAttributesCommon operation. The "output" return
// value will be populated with the DescribeHealthCheckLogTopicAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeHealthCheckLogTopicAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeHealthCheckLogTopicAttributesCommon Send returns without error.
//
// See DescribeHealthCheckLogTopicAttributesCommon for more information on using the DescribeHealthCheckLogTopicAttributesCommon
// API call, and error handling.
//
//	// Example sending a request using the DescribeHealthCheckLogTopicAttributesCommonRequest method.
//	req, resp := client.DescribeHealthCheckLogTopicAttributesCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *CLB) DescribeHealthCheckLogTopicAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeHealthCheckLogTopicAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeHealthCheckLogTopicAttributesCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribeHealthCheckLogTopicAttributesCommon for usage and error information.
func (c *CLB) DescribeHealthCheckLogTopicAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeHealthCheckLogTopicAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeHealthCheckLogTopicAttributesCommonWithContext is the same as DescribeHealthCheckLogTopicAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeHealthCheckLogTopicAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeHealthCheckLogTopicAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeHealthCheckLogTopicAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeHealthCheckLogTopicAttributes = "DescribeHealthCheckLogTopicAttributes"

// DescribeHealthCheckLogTopicAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeHealthCheckLogTopicAttributes operation. The "output" return
// value will be populated with the DescribeHealthCheckLogTopicAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeHealthCheckLogTopicAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeHealthCheckLogTopicAttributesCommon Send returns without error.
//
// See DescribeHealthCheckLogTopicAttributes for more information on using the DescribeHealthCheckLogTopicAttributes
// API call, and error handling.
//
//	// Example sending a request using the DescribeHealthCheckLogTopicAttributesRequest method.
//	req, resp := client.DescribeHealthCheckLogTopicAttributesRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *CLB) DescribeHealthCheckLogTopicAttributesRequest(input *DescribeHealthCheckLogTopicAttributesInput) (req *request.Request, output *DescribeHealthCheckLogTopicAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeHealthCheckLogTopicAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeHealthCheckLogTopicAttributesInput{}
	}

	output = &DescribeHealthCheckLogTopicAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeHealthCheckLogTopicAttributes API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribeHealthCheckLogTopicAttributes for usage and error information.
func (c *CLB) DescribeHealthCheckLogTopicAttributes(input *DescribeHealthCheckLogTopicAttributesInput) (*DescribeHealthCheckLogTopicAttributesOutput, error) {
	req, out := c.DescribeHealthCheckLogTopicAttributesRequest(input)
	return out, req.Send()
}

// DescribeHealthCheckLogTopicAttributesWithContext is the same as DescribeHealthCheckLogTopicAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeHealthCheckLogTopicAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeHealthCheckLogTopicAttributesWithContext(ctx volcengine.Context, input *DescribeHealthCheckLogTopicAttributesInput, opts ...request.Option) (*DescribeHealthCheckLogTopicAttributesOutput, error) {
	req, out := c.DescribeHealthCheckLogTopicAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeHealthCheckLogTopicAttributesInput struct {
	_ struct{} `type:"structure"`

	// LogTopicId is a required field
	LogTopicId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeHealthCheckLogTopicAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeHealthCheckLogTopicAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeHealthCheckLogTopicAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeHealthCheckLogTopicAttributesInput"}
	if s.LogTopicId == nil {
		invalidParams.Add(request.NewErrParamRequired("LogTopicId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetLogTopicId sets the LogTopicId field's value.
func (s *DescribeHealthCheckLogTopicAttributesInput) SetLogTopicId(v string) *DescribeHealthCheckLogTopicAttributesInput {
	s.LogTopicId = &v
	return s
}

type DescribeHealthCheckLogTopicAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LoadBalancerIds []*string `type:"list"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DescribeHealthCheckLogTopicAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeHealthCheckLogTopicAttributesOutput) GoString() string {
	return s.String()
}

// SetLoadBalancerIds sets the LoadBalancerIds field's value.
func (s *DescribeHealthCheckLogTopicAttributesOutput) SetLoadBalancerIds(v []*string) *DescribeHealthCheckLogTopicAttributesOutput {
	s.LoadBalancerIds = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeHealthCheckLogTopicAttributesOutput) SetRequestId(v string) *DescribeHealthCheckLogTopicAttributesOutput {
	s.RequestId = &v
	return s
}
