// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package kafka

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyInstanceSpecCommon = "ModifyInstanceSpec"

// ModifyInstanceSpecCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceSpecCommon operation. The "output" return
// value will be populated with the ModifyInstanceSpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceSpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceSpecCommon Send returns without error.
//
// See ModifyInstanceSpecCommon for more information on using the ModifyInstanceSpecCommon
// API call, and error handling.
//
//	// Example sending a request using the ModifyInstanceSpecCommonRequest method.
//	req, resp := client.ModifyInstanceSpecCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *KAFKA) ModifyInstanceSpecCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyInstanceSpecCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyInstanceSpecCommon API operation for KAFKA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for KAFKA's
// API operation ModifyInstanceSpecCommon for usage and error information.
func (c *KAFKA) ModifyInstanceSpecCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceSpecCommonRequest(input)
	return out, req.Send()
}

// ModifyInstanceSpecCommonWithContext is the same as ModifyInstanceSpecCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceSpecCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *KAFKA) ModifyInstanceSpecCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceSpecCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstanceSpec = "ModifyInstanceSpec"

// ModifyInstanceSpecRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceSpec operation. The "output" return
// value will be populated with the ModifyInstanceSpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceSpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceSpecCommon Send returns without error.
//
// See ModifyInstanceSpec for more information on using the ModifyInstanceSpec
// API call, and error handling.
//
//	// Example sending a request using the ModifyInstanceSpecRequest method.
//	req, resp := client.ModifyInstanceSpecRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *KAFKA) ModifyInstanceSpecRequest(input *ModifyInstanceSpecInput) (req *request.Request, output *ModifyInstanceSpecOutput) {
	op := &request.Operation{
		Name:       opModifyInstanceSpec,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyInstanceSpecInput{}
	}

	output = &ModifyInstanceSpecOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyInstanceSpec API operation for KAFKA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for KAFKA's
// API operation ModifyInstanceSpec for usage and error information.
func (c *KAFKA) ModifyInstanceSpec(input *ModifyInstanceSpecInput) (*ModifyInstanceSpecOutput, error) {
	req, out := c.ModifyInstanceSpecRequest(input)
	return out, req.Send()
}

// ModifyInstanceSpecWithContext is the same as ModifyInstanceSpec with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceSpec for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *KAFKA) ModifyInstanceSpecWithContext(ctx volcengine.Context, input *ModifyInstanceSpecInput, opts ...request.Option) (*ModifyInstanceSpecOutput, error) {
	req, out := c.ModifyInstanceSpecRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyInstanceSpecInput struct {
	_ struct{} `type:"structure"`

	ComputeSpec *string `type:"string"`

	InstanceId *string `type:"string"`

	NeedRebalance *bool `type:"boolean"`

	PartitionNumber *int32 `type:"int32"`

	RebalanceTime *string `type:"string"`

	StorageSpace *int32 `type:"int32"`
}

// String returns the string representation
func (s ModifyInstanceSpecInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceSpecInput) GoString() string {
	return s.String()
}

// SetComputeSpec sets the ComputeSpec field's value.
func (s *ModifyInstanceSpecInput) SetComputeSpec(v string) *ModifyInstanceSpecInput {
	s.ComputeSpec = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyInstanceSpecInput) SetInstanceId(v string) *ModifyInstanceSpecInput {
	s.InstanceId = &v
	return s
}

// SetNeedRebalance sets the NeedRebalance field's value.
func (s *ModifyInstanceSpecInput) SetNeedRebalance(v bool) *ModifyInstanceSpecInput {
	s.NeedRebalance = &v
	return s
}

// SetPartitionNumber sets the PartitionNumber field's value.
func (s *ModifyInstanceSpecInput) SetPartitionNumber(v int32) *ModifyInstanceSpecInput {
	s.PartitionNumber = &v
	return s
}

// SetRebalanceTime sets the RebalanceTime field's value.
func (s *ModifyInstanceSpecInput) SetRebalanceTime(v string) *ModifyInstanceSpecInput {
	s.RebalanceTime = &v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *ModifyInstanceSpecInput) SetStorageSpace(v int32) *ModifyInstanceSpecInput {
	s.StorageSpace = &v
	return s
}

type ModifyInstanceSpecOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OrderId *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstanceSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceSpecOutput) GoString() string {
	return s.String()
}

// SetOrderId sets the OrderId field's value.
func (s *ModifyInstanceSpecOutput) SetOrderId(v string) *ModifyInstanceSpecOutput {
	s.OrderId = &v
	return s
}
