// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package kafka

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreatePublicAddressCommon = "CreatePublicAddress"

// CreatePublicAddressCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreatePublicAddressCommon operation. The "output" return
// value will be populated with the CreatePublicAddressCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatePublicAddressCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatePublicAddressCommon Send returns without error.
//
// See CreatePublicAddressCommon for more information on using the CreatePublicAddressCommon
// API call, and error handling.
//
//	// Example sending a request using the CreatePublicAddressCommonRequest method.
//	req, resp := client.CreatePublicAddressCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *KAFKA) CreatePublicAddressCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreatePublicAddressCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreatePublicAddressCommon API operation for KAFKA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for KAFKA's
// API operation CreatePublicAddressCommon for usage and error information.
func (c *KAFKA) CreatePublicAddressCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreatePublicAddressCommonRequest(input)
	return out, req.Send()
}

// CreatePublicAddressCommonWithContext is the same as CreatePublicAddressCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreatePublicAddressCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *KAFKA) CreatePublicAddressCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreatePublicAddressCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreatePublicAddress = "CreatePublicAddress"

// CreatePublicAddressRequest generates a "volcengine/request.Request" representing the
// client's request for the CreatePublicAddress operation. The "output" return
// value will be populated with the CreatePublicAddressCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatePublicAddressCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatePublicAddressCommon Send returns without error.
//
// See CreatePublicAddress for more information on using the CreatePublicAddress
// API call, and error handling.
//
//	// Example sending a request using the CreatePublicAddressRequest method.
//	req, resp := client.CreatePublicAddressRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *KAFKA) CreatePublicAddressRequest(input *CreatePublicAddressInput) (req *request.Request, output *CreatePublicAddressOutput) {
	op := &request.Operation{
		Name:       opCreatePublicAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreatePublicAddressInput{}
	}

	output = &CreatePublicAddressOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreatePublicAddress API operation for KAFKA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for KAFKA's
// API operation CreatePublicAddress for usage and error information.
func (c *KAFKA) CreatePublicAddress(input *CreatePublicAddressInput) (*CreatePublicAddressOutput, error) {
	req, out := c.CreatePublicAddressRequest(input)
	return out, req.Send()
}

// CreatePublicAddressWithContext is the same as CreatePublicAddress with the addition of
// the ability to pass a context and additional request options.
//
// See CreatePublicAddress for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *KAFKA) CreatePublicAddressWithContext(ctx volcengine.Context, input *CreatePublicAddressInput, opts ...request.Option) (*CreatePublicAddressOutput, error) {
	req, out := c.CreatePublicAddressRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreatePublicAddressInput struct {
	_ struct{} `type:"structure"`

	EipId *string `type:"string"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s CreatePublicAddressInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatePublicAddressInput) GoString() string {
	return s.String()
}

// SetEipId sets the EipId field's value.
func (s *CreatePublicAddressInput) SetEipId(v string) *CreatePublicAddressInput {
	s.EipId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreatePublicAddressInput) SetInstanceId(v string) *CreatePublicAddressInput {
	s.InstanceId = &v
	return s
}

type CreatePublicAddressOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s CreatePublicAddressOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatePublicAddressOutput) GoString() string {
	return s.String()
}
