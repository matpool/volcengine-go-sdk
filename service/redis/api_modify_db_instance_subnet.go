// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyDBInstanceSubnetCommon = "ModifyDBInstanceSubnet"

// ModifyDBInstanceSubnetCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceSubnetCommon operation. The "output" return
// value will be populated with the ModifyDBInstanceSubnetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceSubnetCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceSubnetCommon Send returns without error.
//
// See ModifyDBInstanceSubnetCommon for more information on using the ModifyDBInstanceSubnetCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceSubnetCommonRequest method.
//    req, resp := client.ModifyDBInstanceSubnetCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) ModifyDBInstanceSubnetCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBInstanceSubnetCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceSubnetCommon API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation ModifyDBInstanceSubnetCommon for usage and error information.
func (c *REDIS) ModifyDBInstanceSubnetCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceSubnetCommonRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceSubnetCommonWithContext is the same as ModifyDBInstanceSubnetCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceSubnetCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) ModifyDBInstanceSubnetCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceSubnetCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBInstanceSubnet = "ModifyDBInstanceSubnet"

// ModifyDBInstanceSubnetRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceSubnet operation. The "output" return
// value will be populated with the ModifyDBInstanceSubnetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceSubnetCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceSubnetCommon Send returns without error.
//
// See ModifyDBInstanceSubnet for more information on using the ModifyDBInstanceSubnet
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceSubnetRequest method.
//    req, resp := client.ModifyDBInstanceSubnetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) ModifyDBInstanceSubnetRequest(input *ModifyDBInstanceSubnetInput) (req *request.Request, output *ModifyDBInstanceSubnetOutput) {
	op := &request.Operation{
		Name:       opModifyDBInstanceSubnet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBInstanceSubnetInput{}
	}

	output = &ModifyDBInstanceSubnetOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceSubnet API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation ModifyDBInstanceSubnet for usage and error information.
func (c *REDIS) ModifyDBInstanceSubnet(input *ModifyDBInstanceSubnetInput) (*ModifyDBInstanceSubnetOutput, error) {
	req, out := c.ModifyDBInstanceSubnetRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceSubnetWithContext is the same as ModifyDBInstanceSubnet with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceSubnet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) ModifyDBInstanceSubnetWithContext(ctx volcengine.Context, input *ModifyDBInstanceSubnetInput, opts ...request.Option) (*ModifyDBInstanceSubnetOutput, error) {
	req, out := c.ModifyDBInstanceSubnetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBInstanceSubnetInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`

	// SubnetId is a required field
	SubnetId *string `type:"string" required:"true"`

	// VpcId is a required field
	VpcId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyDBInstanceSubnetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceSubnetInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBInstanceSubnetInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBInstanceSubnetInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.SubnetId == nil {
		invalidParams.Add(request.NewErrParamRequired("SubnetId"))
	}
	if s.VpcId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpcId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *ModifyDBInstanceSubnetInput) SetClientToken(v string) *ModifyDBInstanceSubnetInput {
	s.ClientToken = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBInstanceSubnetInput) SetInstanceId(v string) *ModifyDBInstanceSubnetInput {
	s.InstanceId = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *ModifyDBInstanceSubnetInput) SetSubnetId(v string) *ModifyDBInstanceSubnetInput {
	s.SubnetId = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *ModifyDBInstanceSubnetInput) SetVpcId(v string) *ModifyDBInstanceSubnetInput {
	s.VpcId = &v
	return s
}

type ModifyDBInstanceSubnetOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyDBInstanceSubnetOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceSubnetOutput) GoString() string {
	return s.String()
}
