// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeSlowLogsCommon = "DescribeSlowLogs"

// DescribeSlowLogsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSlowLogsCommon operation. The "output" return
// value will be populated with the DescribeSlowLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSlowLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSlowLogsCommon Send returns without error.
//
// See DescribeSlowLogsCommon for more information on using the DescribeSlowLogsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeSlowLogsCommonRequest method.
//    req, resp := client.DescribeSlowLogsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeSlowLogsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeSlowLogsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeSlowLogsCommon API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation DescribeSlowLogsCommon for usage and error information.
func (c *REDIS) DescribeSlowLogsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeSlowLogsCommonRequest(input)
	return out, req.Send()
}

// DescribeSlowLogsCommonWithContext is the same as DescribeSlowLogsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSlowLogsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeSlowLogsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeSlowLogsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSlowLogs = "DescribeSlowLogs"

// DescribeSlowLogsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSlowLogs operation. The "output" return
// value will be populated with the DescribeSlowLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSlowLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSlowLogsCommon Send returns without error.
//
// See DescribeSlowLogs for more information on using the DescribeSlowLogs
// API call, and error handling.
//
//    // Example sending a request using the DescribeSlowLogsRequest method.
//    req, resp := client.DescribeSlowLogsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeSlowLogsRequest(input *DescribeSlowLogsInput) (req *request.Request, output *DescribeSlowLogsOutput) {
	op := &request.Operation{
		Name:       opDescribeSlowLogs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeSlowLogsInput{}
	}

	output = &DescribeSlowLogsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeSlowLogs API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation DescribeSlowLogs for usage and error information.
func (c *REDIS) DescribeSlowLogs(input *DescribeSlowLogsInput) (*DescribeSlowLogsOutput, error) {
	req, out := c.DescribeSlowLogsRequest(input)
	return out, req.Send()
}

// DescribeSlowLogsWithContext is the same as DescribeSlowLogs with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSlowLogs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeSlowLogsWithContext(ctx volcengine.Context, input *DescribeSlowLogsInput, opts ...request.Option) (*DescribeSlowLogsOutput, error) {
	req, out := c.DescribeSlowLogsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeSlowLogsInput struct {
	_ struct{} `type:"structure"`

	Context *string `type:"string"`

	DBName *string `type:"string"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`

	NodeIds []*string `type:"list"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" required:"true"`

	QueryEndTime *string `type:"string"`

	QueryStartTime *string `type:"string"`
}

// String returns the string representation
func (s DescribeSlowLogsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSlowLogsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeSlowLogsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeSlowLogsInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetContext sets the Context field's value.
func (s *DescribeSlowLogsInput) SetContext(v string) *DescribeSlowLogsInput {
	s.Context = &v
	return s
}

// SetDBName sets the DBName field's value.
func (s *DescribeSlowLogsInput) SetDBName(v string) *DescribeSlowLogsInput {
	s.DBName = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeSlowLogsInput) SetInstanceId(v string) *DescribeSlowLogsInput {
	s.InstanceId = &v
	return s
}

// SetNodeIds sets the NodeIds field's value.
func (s *DescribeSlowLogsInput) SetNodeIds(v []*string) *DescribeSlowLogsInput {
	s.NodeIds = v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeSlowLogsInput) SetPageSize(v int32) *DescribeSlowLogsInput {
	s.PageSize = &v
	return s
}

// SetQueryEndTime sets the QueryEndTime field's value.
func (s *DescribeSlowLogsInput) SetQueryEndTime(v string) *DescribeSlowLogsInput {
	s.QueryEndTime = &v
	return s
}

// SetQueryStartTime sets the QueryStartTime field's value.
func (s *DescribeSlowLogsInput) SetQueryStartTime(v string) *DescribeSlowLogsInput {
	s.QueryStartTime = &v
	return s
}

type DescribeSlowLogsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Context *string `type:"string"`

	InstanceId *string `type:"string"`

	ListOver *bool `type:"boolean"`

	SlowQuery []*SlowQueryForDescribeSlowLogsOutput `type:"list"`

	Total *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeSlowLogsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSlowLogsOutput) GoString() string {
	return s.String()
}

// SetContext sets the Context field's value.
func (s *DescribeSlowLogsOutput) SetContext(v string) *DescribeSlowLogsOutput {
	s.Context = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeSlowLogsOutput) SetInstanceId(v string) *DescribeSlowLogsOutput {
	s.InstanceId = &v
	return s
}

// SetListOver sets the ListOver field's value.
func (s *DescribeSlowLogsOutput) SetListOver(v bool) *DescribeSlowLogsOutput {
	s.ListOver = &v
	return s
}

// SetSlowQuery sets the SlowQuery field's value.
func (s *DescribeSlowLogsOutput) SetSlowQuery(v []*SlowQueryForDescribeSlowLogsOutput) *DescribeSlowLogsOutput {
	s.SlowQuery = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeSlowLogsOutput) SetTotal(v int32) *DescribeSlowLogsOutput {
	s.Total = &v
	return s
}

type SlowQueryForDescribeSlowLogsOutput struct {
	_ struct{} `type:"structure"`

	DBName *string `type:"string"`

	ExecutionStartTime *string `type:"string"`

	HostAddress *string `type:"string"`

	InstanceId *string `type:"string"`

	NodeId *string `type:"string"`

	QueryText *string `type:"string"`

	QueryTimes *int64 `type:"int64"`

	UserName *string `type:"string"`
}

// String returns the string representation
func (s SlowQueryForDescribeSlowLogsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SlowQueryForDescribeSlowLogsOutput) GoString() string {
	return s.String()
}

// SetDBName sets the DBName field's value.
func (s *SlowQueryForDescribeSlowLogsOutput) SetDBName(v string) *SlowQueryForDescribeSlowLogsOutput {
	s.DBName = &v
	return s
}

// SetExecutionStartTime sets the ExecutionStartTime field's value.
func (s *SlowQueryForDescribeSlowLogsOutput) SetExecutionStartTime(v string) *SlowQueryForDescribeSlowLogsOutput {
	s.ExecutionStartTime = &v
	return s
}

// SetHostAddress sets the HostAddress field's value.
func (s *SlowQueryForDescribeSlowLogsOutput) SetHostAddress(v string) *SlowQueryForDescribeSlowLogsOutput {
	s.HostAddress = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *SlowQueryForDescribeSlowLogsOutput) SetInstanceId(v string) *SlowQueryForDescribeSlowLogsOutput {
	s.InstanceId = &v
	return s
}

// SetNodeId sets the NodeId field's value.
func (s *SlowQueryForDescribeSlowLogsOutput) SetNodeId(v string) *SlowQueryForDescribeSlowLogsOutput {
	s.NodeId = &v
	return s
}

// SetQueryText sets the QueryText field's value.
func (s *SlowQueryForDescribeSlowLogsOutput) SetQueryText(v string) *SlowQueryForDescribeSlowLogsOutput {
	s.QueryText = &v
	return s
}

// SetQueryTimes sets the QueryTimes field's value.
func (s *SlowQueryForDescribeSlowLogsOutput) SetQueryTimes(v int64) *SlowQueryForDescribeSlowLogsOutput {
	s.QueryTimes = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *SlowQueryForDescribeSlowLogsOutput) SetUserName(v string) *SlowQueryForDescribeSlowLogsOutput {
	s.UserName = &v
	return s
}
