// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyDBInstanceNodeNumberCommon = "ModifyDBInstanceNodeNumber"

// ModifyDBInstanceNodeNumberCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceNodeNumberCommon operation. The "output" return
// value will be populated with the ModifyDBInstanceNodeNumberCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceNodeNumberCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceNodeNumberCommon Send returns without error.
//
// See ModifyDBInstanceNodeNumberCommon for more information on using the ModifyDBInstanceNodeNumberCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceNodeNumberCommonRequest method.
//    req, resp := client.ModifyDBInstanceNodeNumberCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) ModifyDBInstanceNodeNumberCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBInstanceNodeNumberCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceNodeNumberCommon API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation ModifyDBInstanceNodeNumberCommon for usage and error information.
func (c *REDIS) ModifyDBInstanceNodeNumberCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceNodeNumberCommonRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceNodeNumberCommonWithContext is the same as ModifyDBInstanceNodeNumberCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceNodeNumberCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) ModifyDBInstanceNodeNumberCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceNodeNumberCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBInstanceNodeNumber = "ModifyDBInstanceNodeNumber"

// ModifyDBInstanceNodeNumberRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceNodeNumber operation. The "output" return
// value will be populated with the ModifyDBInstanceNodeNumberCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceNodeNumberCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceNodeNumberCommon Send returns without error.
//
// See ModifyDBInstanceNodeNumber for more information on using the ModifyDBInstanceNodeNumber
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceNodeNumberRequest method.
//    req, resp := client.ModifyDBInstanceNodeNumberRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) ModifyDBInstanceNodeNumberRequest(input *ModifyDBInstanceNodeNumberInput) (req *request.Request, output *ModifyDBInstanceNodeNumberOutput) {
	op := &request.Operation{
		Name:       opModifyDBInstanceNodeNumber,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBInstanceNodeNumberInput{}
	}

	output = &ModifyDBInstanceNodeNumberOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceNodeNumber API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation ModifyDBInstanceNodeNumber for usage and error information.
func (c *REDIS) ModifyDBInstanceNodeNumber(input *ModifyDBInstanceNodeNumberInput) (*ModifyDBInstanceNodeNumberOutput, error) {
	req, out := c.ModifyDBInstanceNodeNumberRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceNodeNumberWithContext is the same as ModifyDBInstanceNodeNumber with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceNodeNumber for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) ModifyDBInstanceNodeNumberWithContext(ctx volcengine.Context, input *ModifyDBInstanceNodeNumberInput, opts ...request.Option) (*ModifyDBInstanceNodeNumberOutput, error) {
	req, out := c.ModifyDBInstanceNodeNumberRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBInstanceNodeNumberInput struct {
	_ struct{} `type:"structure"`

	// ApplyImmediately is a required field
	ApplyImmediately *bool `type:"boolean" required:"true"`

	ClientToken *string `type:"string"`

	CreateBackup *bool `type:"boolean"`

	// InstanceId is a required field
	InstanceId *string `type:"string" required:"true"`

	// NodeNumber is a required field
	NodeNumber *int32 `type:"int32" required:"true"`
}

// String returns the string representation
func (s ModifyDBInstanceNodeNumberInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceNodeNumberInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBInstanceNodeNumberInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBInstanceNodeNumberInput"}
	if s.ApplyImmediately == nil {
		invalidParams.Add(request.NewErrParamRequired("ApplyImmediately"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.NodeNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("NodeNumber"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetApplyImmediately sets the ApplyImmediately field's value.
func (s *ModifyDBInstanceNodeNumberInput) SetApplyImmediately(v bool) *ModifyDBInstanceNodeNumberInput {
	s.ApplyImmediately = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *ModifyDBInstanceNodeNumberInput) SetClientToken(v string) *ModifyDBInstanceNodeNumberInput {
	s.ClientToken = &v
	return s
}

// SetCreateBackup sets the CreateBackup field's value.
func (s *ModifyDBInstanceNodeNumberInput) SetCreateBackup(v bool) *ModifyDBInstanceNodeNumberInput {
	s.CreateBackup = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBInstanceNodeNumberInput) SetInstanceId(v string) *ModifyDBInstanceNodeNumberInput {
	s.InstanceId = &v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *ModifyDBInstanceNodeNumberInput) SetNodeNumber(v int32) *ModifyDBInstanceNodeNumberInput {
	s.NodeNumber = &v
	return s
}

type ModifyDBInstanceNodeNumberOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OrderNO *string `type:"string"`
}

// String returns the string representation
func (s ModifyDBInstanceNodeNumberOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceNodeNumberOutput) GoString() string {
	return s.String()
}

// SetOrderNO sets the OrderNO field's value.
func (s *ModifyDBInstanceNodeNumberOutput) SetOrderNO(v string) *ModifyDBInstanceNodeNumberOutput {
	s.OrderNO = &v
	return s
}
