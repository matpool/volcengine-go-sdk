// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteAddonCommon = "DeleteAddon"

// DeleteAddonCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAddonCommon operation. The "output" return
// value will be populated with the DeleteAddonCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAddonCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAddonCommon Send returns without error.
//
// See DeleteAddonCommon for more information on using the DeleteAddonCommon
// API call, and error handling.
//
//	// Example sending a request using the DeleteAddonCommonRequest method.
//	req, resp := client.DeleteAddonCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *VKE) DeleteAddonCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteAddonCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAddonCommon API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation DeleteAddonCommon for usage and error information.
func (c *VKE) DeleteAddonCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteAddonCommonRequest(input)
	return out, req.Send()
}

// DeleteAddonCommonWithContext is the same as DeleteAddonCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAddonCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) DeleteAddonCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteAddonCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteAddon = "DeleteAddon"

// DeleteAddonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAddon operation. The "output" return
// value will be populated with the DeleteAddonCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAddonCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAddonCommon Send returns without error.
//
// See DeleteAddon for more information on using the DeleteAddon
// API call, and error handling.
//
//	// Example sending a request using the DeleteAddonRequest method.
//	req, resp := client.DeleteAddonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *VKE) DeleteAddonRequest(input *DeleteAddonInput) (req *request.Request, output *DeleteAddonOutput) {
	op := &request.Operation{
		Name:       opDeleteAddon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAddonInput{}
	}

	output = &DeleteAddonOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAddon API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation DeleteAddon for usage and error information.
func (c *VKE) DeleteAddon(input *DeleteAddonInput) (*DeleteAddonOutput, error) {
	req, out := c.DeleteAddonRequest(input)
	return out, req.Send()
}

// DeleteAddonWithContext is the same as DeleteAddon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAddon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) DeleteAddonWithContext(ctx volcengine.Context, input *DeleteAddonInput, opts ...request.Option) (*DeleteAddonOutput, error) {
	req, out := c.DeleteAddonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteAddonInput struct {
	_ struct{} `type:"structure"`

	CascadingDeleteResources []*string `type:"list"`

	ClusterId *string `type:"string"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s DeleteAddonInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAddonInput) GoString() string {
	return s.String()
}

// SetCascadingDeleteResources sets the CascadingDeleteResources field's value.
func (s *DeleteAddonInput) SetCascadingDeleteResources(v []*string) *DeleteAddonInput {
	s.CascadingDeleteResources = v
	return s
}

// SetClusterId sets the ClusterId field's value.
func (s *DeleteAddonInput) SetClusterId(v string) *DeleteAddonInput {
	s.ClusterId = &v
	return s
}

// SetName sets the Name field's value.
func (s *DeleteAddonInput) SetName(v string) *DeleteAddonInput {
	s.Name = &v
	return s
}

type DeleteAddonOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteAddonOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAddonOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfCascadingDeleteResourceListForDeleteAddonInputCrd is a EnumOfCascadingDeleteResourceListForDeleteAddonInput enum value
	EnumOfCascadingDeleteResourceListForDeleteAddonInputCrd = "Crd"
)
