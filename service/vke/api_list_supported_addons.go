// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListSupportedAddonsCommon = "ListSupportedAddons"

// ListSupportedAddonsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSupportedAddonsCommon operation. The "output" return
// value will be populated with the ListSupportedAddonsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSupportedAddonsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSupportedAddonsCommon Send returns without error.
//
// See ListSupportedAddonsCommon for more information on using the ListSupportedAddonsCommon
// API call, and error handling.
//
//	// Example sending a request using the ListSupportedAddonsCommonRequest method.
//	req, resp := client.ListSupportedAddonsCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *VKE) ListSupportedAddonsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListSupportedAddonsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSupportedAddonsCommon API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation ListSupportedAddonsCommon for usage and error information.
func (c *VKE) ListSupportedAddonsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListSupportedAddonsCommonRequest(input)
	return out, req.Send()
}

// ListSupportedAddonsCommonWithContext is the same as ListSupportedAddonsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListSupportedAddonsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) ListSupportedAddonsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListSupportedAddonsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListSupportedAddons = "ListSupportedAddons"

// ListSupportedAddonsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSupportedAddons operation. The "output" return
// value will be populated with the ListSupportedAddonsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSupportedAddonsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSupportedAddonsCommon Send returns without error.
//
// See ListSupportedAddons for more information on using the ListSupportedAddons
// API call, and error handling.
//
//	// Example sending a request using the ListSupportedAddonsRequest method.
//	req, resp := client.ListSupportedAddonsRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *VKE) ListSupportedAddonsRequest(input *ListSupportedAddonsInput) (req *request.Request, output *ListSupportedAddonsOutput) {
	op := &request.Operation{
		Name:       opListSupportedAddons,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListSupportedAddonsInput{}
	}

	output = &ListSupportedAddonsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSupportedAddons API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation ListSupportedAddons for usage and error information.
func (c *VKE) ListSupportedAddons(input *ListSupportedAddonsInput) (*ListSupportedAddonsOutput, error) {
	req, out := c.ListSupportedAddonsRequest(input)
	return out, req.Send()
}

// ListSupportedAddonsWithContext is the same as ListSupportedAddons with the addition of
// the ability to pass a context and additional request options.
//
// See ListSupportedAddons for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) ListSupportedAddonsWithContext(ctx volcengine.Context, input *ListSupportedAddonsInput, opts ...request.Option) (*ListSupportedAddonsOutput, error) {
	req, out := c.ListSupportedAddonsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CompatibilityForListSupportedAddonsOutput struct {
	_ struct{} `type:"structure"`

	KubernetesVersion *string `type:"string"`
}

// String returns the string representation
func (s CompatibilityForListSupportedAddonsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CompatibilityForListSupportedAddonsOutput) GoString() string {
	return s.String()
}

// SetKubernetesVersion sets the KubernetesVersion field's value.
func (s *CompatibilityForListSupportedAddonsOutput) SetKubernetesVersion(v string) *CompatibilityForListSupportedAddonsOutput {
	s.KubernetesVersion = &v
	return s
}

type FilterForListSupportedAddonsInput struct {
	_ struct{} `type:"structure"`

	Categories []*string `type:"list"`

	DeployModes []*string `type:"list"`

	DeployNodeTypes []*string `type:"list"`

	Name *string `type:"string"`

	Necessaries []*string `type:"list"`

	PodNetworkModes []*string `type:"list"`

	VersionsCompatibilitiesKubernetesVersions []*string `type:"list" json:"Versions.Compatibilities.KubernetesVersions"`
}

// String returns the string representation
func (s FilterForListSupportedAddonsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListSupportedAddonsInput) GoString() string {
	return s.String()
}

// SetCategories sets the Categories field's value.
func (s *FilterForListSupportedAddonsInput) SetCategories(v []*string) *FilterForListSupportedAddonsInput {
	s.Categories = v
	return s
}

// SetDeployModes sets the DeployModes field's value.
func (s *FilterForListSupportedAddonsInput) SetDeployModes(v []*string) *FilterForListSupportedAddonsInput {
	s.DeployModes = v
	return s
}

// SetDeployNodeTypes sets the DeployNodeTypes field's value.
func (s *FilterForListSupportedAddonsInput) SetDeployNodeTypes(v []*string) *FilterForListSupportedAddonsInput {
	s.DeployNodeTypes = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListSupportedAddonsInput) SetName(v string) *FilterForListSupportedAddonsInput {
	s.Name = &v
	return s
}

// SetNecessaries sets the Necessaries field's value.
func (s *FilterForListSupportedAddonsInput) SetNecessaries(v []*string) *FilterForListSupportedAddonsInput {
	s.Necessaries = v
	return s
}

// SetPodNetworkModes sets the PodNetworkModes field's value.
func (s *FilterForListSupportedAddonsInput) SetPodNetworkModes(v []*string) *FilterForListSupportedAddonsInput {
	s.PodNetworkModes = v
	return s
}

// SetVersionsCompatibilitiesKubernetesVersions sets the VersionsCompatibilitiesKubernetesVersions field's value.
func (s *FilterForListSupportedAddonsInput) SetVersionsCompatibilitiesKubernetesVersions(v []*string) *FilterForListSupportedAddonsInput {
	s.VersionsCompatibilitiesKubernetesVersions = v
	return s
}

type ItemForListSupportedAddonsOutput struct {
	_ struct{} `type:"structure"`

	Categories []*string `type:"list"`

	DeployMode *string `type:"string"`

	DeployNodeTypes []*string `type:"list"`

	Name *string `type:"string"`

	Necessary *string `type:"string"`

	PodNetworkModes []*string `type:"list"`

	Versions []*VersionForListSupportedAddonsOutput `type:"list"`
}

// String returns the string representation
func (s ItemForListSupportedAddonsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListSupportedAddonsOutput) GoString() string {
	return s.String()
}

// SetCategories sets the Categories field's value.
func (s *ItemForListSupportedAddonsOutput) SetCategories(v []*string) *ItemForListSupportedAddonsOutput {
	s.Categories = v
	return s
}

// SetDeployMode sets the DeployMode field's value.
func (s *ItemForListSupportedAddonsOutput) SetDeployMode(v string) *ItemForListSupportedAddonsOutput {
	s.DeployMode = &v
	return s
}

// SetDeployNodeTypes sets the DeployNodeTypes field's value.
func (s *ItemForListSupportedAddonsOutput) SetDeployNodeTypes(v []*string) *ItemForListSupportedAddonsOutput {
	s.DeployNodeTypes = v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListSupportedAddonsOutput) SetName(v string) *ItemForListSupportedAddonsOutput {
	s.Name = &v
	return s
}

// SetNecessary sets the Necessary field's value.
func (s *ItemForListSupportedAddonsOutput) SetNecessary(v string) *ItemForListSupportedAddonsOutput {
	s.Necessary = &v
	return s
}

// SetPodNetworkModes sets the PodNetworkModes field's value.
func (s *ItemForListSupportedAddonsOutput) SetPodNetworkModes(v []*string) *ItemForListSupportedAddonsOutput {
	s.PodNetworkModes = v
	return s
}

// SetVersions sets the Versions field's value.
func (s *ItemForListSupportedAddonsOutput) SetVersions(v []*VersionForListSupportedAddonsOutput) *ItemForListSupportedAddonsOutput {
	s.Versions = v
	return s
}

type ListSupportedAddonsInput struct {
	_ struct{} `type:"structure"`

	Filter *FilterForListSupportedAddonsInput `type:"structure"`
}

// String returns the string representation
func (s ListSupportedAddonsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSupportedAddonsInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListSupportedAddonsInput) SetFilter(v *FilterForListSupportedAddonsInput) *ListSupportedAddonsInput {
	s.Filter = v
	return s
}

type ListSupportedAddonsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListSupportedAddonsOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s ListSupportedAddonsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSupportedAddonsOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListSupportedAddonsOutput) SetItems(v []*ItemForListSupportedAddonsOutput) *ListSupportedAddonsOutput {
	s.Items = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListSupportedAddonsOutput) SetTotalCount(v int32) *ListSupportedAddonsOutput {
	s.TotalCount = &v
	return s
}

type VersionForListSupportedAddonsOutput struct {
	_ struct{} `type:"structure"`

	Compatibilities []*CompatibilityForListSupportedAddonsOutput `type:"list"`

	CompatibleVersions []*string `type:"list"`

	Version *string `type:"string"`
}

// String returns the string representation
func (s VersionForListSupportedAddonsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VersionForListSupportedAddonsOutput) GoString() string {
	return s.String()
}

// SetCompatibilities sets the Compatibilities field's value.
func (s *VersionForListSupportedAddonsOutput) SetCompatibilities(v []*CompatibilityForListSupportedAddonsOutput) *VersionForListSupportedAddonsOutput {
	s.Compatibilities = v
	return s
}

// SetCompatibleVersions sets the CompatibleVersions field's value.
func (s *VersionForListSupportedAddonsOutput) SetCompatibleVersions(v []*string) *VersionForListSupportedAddonsOutput {
	s.CompatibleVersions = v
	return s
}

// SetVersion sets the Version field's value.
func (s *VersionForListSupportedAddonsOutput) SetVersion(v string) *VersionForListSupportedAddonsOutput {
	s.Version = &v
	return s
}

const (
	// EnumOfCategoryListForListSupportedAddonsInputDns is a EnumOfCategoryListForListSupportedAddonsInput enum value
	EnumOfCategoryListForListSupportedAddonsInputDns = "Dns"

	// EnumOfCategoryListForListSupportedAddonsInputGpu is a EnumOfCategoryListForListSupportedAddonsInput enum value
	EnumOfCategoryListForListSupportedAddonsInputGpu = "Gpu"

	// EnumOfCategoryListForListSupportedAddonsInputImage is a EnumOfCategoryListForListSupportedAddonsInput enum value
	EnumOfCategoryListForListSupportedAddonsInputImage = "Image"

	// EnumOfCategoryListForListSupportedAddonsInputMonitor is a EnumOfCategoryListForListSupportedAddonsInput enum value
	EnumOfCategoryListForListSupportedAddonsInputMonitor = "Monitor"

	// EnumOfCategoryListForListSupportedAddonsInputNetwork is a EnumOfCategoryListForListSupportedAddonsInput enum value
	EnumOfCategoryListForListSupportedAddonsInputNetwork = "Network"

	// EnumOfCategoryListForListSupportedAddonsInputScheduler is a EnumOfCategoryListForListSupportedAddonsInput enum value
	EnumOfCategoryListForListSupportedAddonsInputScheduler = "Scheduler"

	// EnumOfCategoryListForListSupportedAddonsInputSecurity is a EnumOfCategoryListForListSupportedAddonsInput enum value
	EnumOfCategoryListForListSupportedAddonsInputSecurity = "Security"

	// EnumOfCategoryListForListSupportedAddonsInputStorage is a EnumOfCategoryListForListSupportedAddonsInput enum value
	EnumOfCategoryListForListSupportedAddonsInputStorage = "Storage"
)

const (
	// EnumOfCategoryListForListSupportedAddonsOutputDns is a EnumOfCategoryListForListSupportedAddonsOutput enum value
	EnumOfCategoryListForListSupportedAddonsOutputDns = "Dns"

	// EnumOfCategoryListForListSupportedAddonsOutputGpu is a EnumOfCategoryListForListSupportedAddonsOutput enum value
	EnumOfCategoryListForListSupportedAddonsOutputGpu = "Gpu"

	// EnumOfCategoryListForListSupportedAddonsOutputImage is a EnumOfCategoryListForListSupportedAddonsOutput enum value
	EnumOfCategoryListForListSupportedAddonsOutputImage = "Image"

	// EnumOfCategoryListForListSupportedAddonsOutputMonitor is a EnumOfCategoryListForListSupportedAddonsOutput enum value
	EnumOfCategoryListForListSupportedAddonsOutputMonitor = "Monitor"

	// EnumOfCategoryListForListSupportedAddonsOutputNetwork is a EnumOfCategoryListForListSupportedAddonsOutput enum value
	EnumOfCategoryListForListSupportedAddonsOutputNetwork = "Network"

	// EnumOfCategoryListForListSupportedAddonsOutputScheduler is a EnumOfCategoryListForListSupportedAddonsOutput enum value
	EnumOfCategoryListForListSupportedAddonsOutputScheduler = "Scheduler"

	// EnumOfCategoryListForListSupportedAddonsOutputSecurity is a EnumOfCategoryListForListSupportedAddonsOutput enum value
	EnumOfCategoryListForListSupportedAddonsOutputSecurity = "Security"

	// EnumOfCategoryListForListSupportedAddonsOutputStorage is a EnumOfCategoryListForListSupportedAddonsOutput enum value
	EnumOfCategoryListForListSupportedAddonsOutputStorage = "Storage"
)

const (
	// EnumOfDeployModeListForListSupportedAddonsInputEither is a EnumOfDeployModeListForListSupportedAddonsInput enum value
	EnumOfDeployModeListForListSupportedAddonsInputEither = "Either"

	// EnumOfDeployModeListForListSupportedAddonsInputManaged is a EnumOfDeployModeListForListSupportedAddonsInput enum value
	EnumOfDeployModeListForListSupportedAddonsInputManaged = "Managed"

	// EnumOfDeployModeListForListSupportedAddonsInputUnmanaged is a EnumOfDeployModeListForListSupportedAddonsInput enum value
	EnumOfDeployModeListForListSupportedAddonsInputUnmanaged = "Unmanaged"
)

const (
	// EnumOfDeployNodeTypeListForListSupportedAddonsInputEdgeNode is a EnumOfDeployNodeTypeListForListSupportedAddonsInput enum value
	EnumOfDeployNodeTypeListForListSupportedAddonsInputEdgeNode = "EdgeNode"

	// EnumOfDeployNodeTypeListForListSupportedAddonsInputNode is a EnumOfDeployNodeTypeListForListSupportedAddonsInput enum value
	EnumOfDeployNodeTypeListForListSupportedAddonsInputNode = "Node"

	// EnumOfDeployNodeTypeListForListSupportedAddonsInputVirtualNode is a EnumOfDeployNodeTypeListForListSupportedAddonsInput enum value
	EnumOfDeployNodeTypeListForListSupportedAddonsInputVirtualNode = "VirtualNode"
)

const (
	// EnumOfDeployNodeTypeListForListSupportedAddonsOutputEdgeNode is a EnumOfDeployNodeTypeListForListSupportedAddonsOutput enum value
	EnumOfDeployNodeTypeListForListSupportedAddonsOutputEdgeNode = "EdgeNode"

	// EnumOfDeployNodeTypeListForListSupportedAddonsOutputNode is a EnumOfDeployNodeTypeListForListSupportedAddonsOutput enum value
	EnumOfDeployNodeTypeListForListSupportedAddonsOutputNode = "Node"

	// EnumOfDeployNodeTypeListForListSupportedAddonsOutputVirtualNode is a EnumOfDeployNodeTypeListForListSupportedAddonsOutput enum value
	EnumOfDeployNodeTypeListForListSupportedAddonsOutputVirtualNode = "VirtualNode"
)

const (
	// EnumOfNecessaryListForListSupportedAddonsInputOnDemand is a EnumOfNecessaryListForListSupportedAddonsInput enum value
	EnumOfNecessaryListForListSupportedAddonsInputOnDemand = "OnDemand"

	// EnumOfNecessaryListForListSupportedAddonsInputRecommended is a EnumOfNecessaryListForListSupportedAddonsInput enum value
	EnumOfNecessaryListForListSupportedAddonsInputRecommended = "Recommended"

	// EnumOfNecessaryListForListSupportedAddonsInputRequired is a EnumOfNecessaryListForListSupportedAddonsInput enum value
	EnumOfNecessaryListForListSupportedAddonsInputRequired = "Required"
)

const (
	// EnumOfPodNetworkModeListForListSupportedAddonsInputCalicoBgp is a EnumOfPodNetworkModeListForListSupportedAddonsInput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsInputCalicoBgp = "CalicoBgp"

	// EnumOfPodNetworkModeListForListSupportedAddonsInputCalicoVxlan is a EnumOfPodNetworkModeListForListSupportedAddonsInput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsInputCalicoVxlan = "CalicoVxlan"

	// EnumOfPodNetworkModeListForListSupportedAddonsInputFlannel is a EnumOfPodNetworkModeListForListSupportedAddonsInput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsInputFlannel = "Flannel"

	// EnumOfPodNetworkModeListForListSupportedAddonsInputVpcCniDedicated is a EnumOfPodNetworkModeListForListSupportedAddonsInput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsInputVpcCniDedicated = "VpcCniDedicated"

	// EnumOfPodNetworkModeListForListSupportedAddonsInputVpcCniShared is a EnumOfPodNetworkModeListForListSupportedAddonsInput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsInputVpcCniShared = "VpcCniShared"
)

const (
	// EnumOfPodNetworkModeListForListSupportedAddonsOutputCalicoBgp is a EnumOfPodNetworkModeListForListSupportedAddonsOutput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsOutputCalicoBgp = "CalicoBgp"

	// EnumOfPodNetworkModeListForListSupportedAddonsOutputCalicoVxlan is a EnumOfPodNetworkModeListForListSupportedAddonsOutput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsOutputCalicoVxlan = "CalicoVxlan"

	// EnumOfPodNetworkModeListForListSupportedAddonsOutputFlannel is a EnumOfPodNetworkModeListForListSupportedAddonsOutput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsOutputFlannel = "Flannel"

	// EnumOfPodNetworkModeListForListSupportedAddonsOutputVpcCniDedicated is a EnumOfPodNetworkModeListForListSupportedAddonsOutput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsOutputVpcCniDedicated = "VpcCniDedicated"

	// EnumOfPodNetworkModeListForListSupportedAddonsOutputVpcCniShared is a EnumOfPodNetworkModeListForListSupportedAddonsOutput enum value
	EnumOfPodNetworkModeListForListSupportedAddonsOutputVpcCniShared = "VpcCniShared"
)
