// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package spark

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteResourcePoolCommon = "deleteResourcePool"

// DeleteResourcePoolCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteResourcePoolCommon operation. The "output" return
// value will be populated with the DeleteResourcePoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteResourcePoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteResourcePoolCommon Send returns without error.
//
// See DeleteResourcePoolCommon for more information on using the DeleteResourcePoolCommon
// API call, and error handling.
//
//	// Example sending a request using the DeleteResourcePoolCommonRequest method.
//	req, resp := client.DeleteResourcePoolCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *SPARK) DeleteResourcePoolCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteResourcePoolCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteResourcePoolCommon API operation for SPARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPARK's
// API operation DeleteResourcePoolCommon for usage and error information.
func (c *SPARK) DeleteResourcePoolCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteResourcePoolCommonRequest(input)
	return out, req.Send()
}

// DeleteResourcePoolCommonWithContext is the same as DeleteResourcePoolCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteResourcePoolCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPARK) DeleteResourcePoolCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteResourcePoolCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteResourcePool = "deleteResourcePool"

// DeleteResourcePoolRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteResourcePool operation. The "output" return
// value will be populated with the DeleteResourcePoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteResourcePoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteResourcePoolCommon Send returns without error.
//
// See DeleteResourcePool for more information on using the DeleteResourcePool
// API call, and error handling.
//
//	// Example sending a request using the DeleteResourcePoolRequest method.
//	req, resp := client.DeleteResourcePoolRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *SPARK) DeleteResourcePoolRequest(input *DeleteResourcePoolInput) (req *request.Request, output *DeleteResourcePoolOutput) {
	op := &request.Operation{
		Name:       opDeleteResourcePool,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteResourcePoolInput{}
	}

	output = &DeleteResourcePoolOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteResourcePool API operation for SPARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPARK's
// API operation DeleteResourcePool for usage and error information.
func (c *SPARK) DeleteResourcePool(input *DeleteResourcePoolInput) (*DeleteResourcePoolOutput, error) {
	req, out := c.DeleteResourcePoolRequest(input)
	return out, req.Send()
}

// DeleteResourcePoolWithContext is the same as DeleteResourcePool with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteResourcePool for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPARK) DeleteResourcePoolWithContext(ctx volcengine.Context, input *DeleteResourcePoolInput, opts ...request.Option) (*DeleteResourcePoolOutput, error) {
	req, out := c.DeleteResourcePoolRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteResourcePoolInput struct {
	_ struct{} `type:"structure"`

	ResourcePoolTrn *string `type:"string"`
}

// String returns the string representation
func (s DeleteResourcePoolInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteResourcePoolInput) GoString() string {
	return s.String()
}

// SetResourcePoolTrn sets the ResourcePoolTrn field's value.
func (s *DeleteResourcePoolInput) SetResourcePoolTrn(v string) *DeleteResourcePoolInput {
	s.ResourcePoolTrn = &v
	return s
}

type DeleteResourcePoolOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Message *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s DeleteResourcePoolOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteResourcePoolOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *DeleteResourcePoolOutput) SetMessage(v string) *DeleteResourcePoolOutput {
	s.Message = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DeleteResourcePoolOutput) SetStatus(v string) *DeleteResourcePoolOutput {
	s.Status = &v
	return s
}
