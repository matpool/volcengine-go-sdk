// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package spark

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListResourcePoolCommon = "listResourcePool"

// ListResourcePoolCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourcePoolCommon operation. The "output" return
// value will be populated with the ListResourcePoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourcePoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourcePoolCommon Send returns without error.
//
// See ListResourcePoolCommon for more information on using the ListResourcePoolCommon
// API call, and error handling.
//
//	// Example sending a request using the ListResourcePoolCommonRequest method.
//	req, resp := client.ListResourcePoolCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *SPARK) ListResourcePoolCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListResourcePoolCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResourcePoolCommon API operation for SPARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPARK's
// API operation ListResourcePoolCommon for usage and error information.
func (c *SPARK) ListResourcePoolCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListResourcePoolCommonRequest(input)
	return out, req.Send()
}

// ListResourcePoolCommonWithContext is the same as ListResourcePoolCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourcePoolCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPARK) ListResourcePoolCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListResourcePoolCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListResourcePool = "listResourcePool"

// ListResourcePoolRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourcePool operation. The "output" return
// value will be populated with the ListResourcePoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourcePoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourcePoolCommon Send returns without error.
//
// See ListResourcePool for more information on using the ListResourcePool
// API call, and error handling.
//
//	// Example sending a request using the ListResourcePoolRequest method.
//	req, resp := client.ListResourcePoolRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *SPARK) ListResourcePoolRequest(input *ListResourcePoolInput) (req *request.Request, output *ListResourcePoolOutput) {
	op := &request.Operation{
		Name:       opListResourcePool,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResourcePoolInput{}
	}

	output = &ListResourcePoolOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListResourcePool API operation for SPARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPARK's
// API operation ListResourcePool for usage and error information.
func (c *SPARK) ListResourcePool(input *ListResourcePoolInput) (*ListResourcePoolOutput, error) {
	req, out := c.ListResourcePoolRequest(input)
	return out, req.Send()
}

// ListResourcePoolWithContext is the same as ListResourcePool with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourcePool for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPARK) ListResourcePoolWithContext(ctx volcengine.Context, input *ListResourcePoolInput, opts ...request.Option) (*ListResourcePoolOutput, error) {
	req, out := c.ListResourcePoolRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataListForlistResourcePoolOutput struct {
	_ struct{} `type:"structure"`

	BillingType *string `type:"string"`

	CreateTime *string `type:"string"`

	Name *string `type:"string"`

	ProjectId *string `type:"string"`

	RegionId *string `type:"string"`

	ResourcePoolTrn *string `type:"string"`

	Status *string `type:"string"`

	StatusMessage *string `type:"string"`

	UpdateTime *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DataListForlistResourcePoolOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataListForlistResourcePoolOutput) GoString() string {
	return s.String()
}

// SetBillingType sets the BillingType field's value.
func (s *DataListForlistResourcePoolOutput) SetBillingType(v string) *DataListForlistResourcePoolOutput {
	s.BillingType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DataListForlistResourcePoolOutput) SetCreateTime(v string) *DataListForlistResourcePoolOutput {
	s.CreateTime = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataListForlistResourcePoolOutput) SetName(v string) *DataListForlistResourcePoolOutput {
	s.Name = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *DataListForlistResourcePoolOutput) SetProjectId(v string) *DataListForlistResourcePoolOutput {
	s.ProjectId = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DataListForlistResourcePoolOutput) SetRegionId(v string) *DataListForlistResourcePoolOutput {
	s.RegionId = &v
	return s
}

// SetResourcePoolTrn sets the ResourcePoolTrn field's value.
func (s *DataListForlistResourcePoolOutput) SetResourcePoolTrn(v string) *DataListForlistResourcePoolOutput {
	s.ResourcePoolTrn = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataListForlistResourcePoolOutput) SetStatus(v string) *DataListForlistResourcePoolOutput {
	s.Status = &v
	return s
}

// SetStatusMessage sets the StatusMessage field's value.
func (s *DataListForlistResourcePoolOutput) SetStatusMessage(v string) *DataListForlistResourcePoolOutput {
	s.StatusMessage = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataListForlistResourcePoolOutput) SetUpdateTime(v string) *DataListForlistResourcePoolOutput {
	s.UpdateTime = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DataListForlistResourcePoolOutput) SetZoneId(v string) *DataListForlistResourcePoolOutput {
	s.ZoneId = &v
	return s
}

type ListResourcePoolInput struct {
	_ struct{} `type:"structure"`

	NameKey *string `type:"string"`

	PageNum *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ProjectId *string `type:"string"`

	StatusKey *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s ListResourcePoolInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcePoolInput) GoString() string {
	return s.String()
}

// SetNameKey sets the NameKey field's value.
func (s *ListResourcePoolInput) SetNameKey(v string) *ListResourcePoolInput {
	s.NameKey = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListResourcePoolInput) SetPageNum(v int32) *ListResourcePoolInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListResourcePoolInput) SetPageSize(v int32) *ListResourcePoolInput {
	s.PageSize = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *ListResourcePoolInput) SetProjectId(v string) *ListResourcePoolInput {
	s.ProjectId = &v
	return s
}

// SetStatusKey sets the StatusKey field's value.
func (s *ListResourcePoolInput) SetStatusKey(v string) *ListResourcePoolInput {
	s.StatusKey = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ListResourcePoolInput) SetZoneId(v string) *ListResourcePoolInput {
	s.ZoneId = &v
	return s
}

type ListResourcePoolOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DataList []*DataListForlistResourcePoolOutput `type:"list"`

	PageNum *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	Total *int32 `type:"int32"`
}

// String returns the string representation
func (s ListResourcePoolOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcePoolOutput) GoString() string {
	return s.String()
}

// SetDataList sets the DataList field's value.
func (s *ListResourcePoolOutput) SetDataList(v []*DataListForlistResourcePoolOutput) *ListResourcePoolOutput {
	s.DataList = v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListResourcePoolOutput) SetPageNum(v int32) *ListResourcePoolOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListResourcePoolOutput) SetPageSize(v int32) *ListResourcePoolOutput {
	s.PageSize = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListResourcePoolOutput) SetTotal(v int32) *ListResourcePoolOutput {
	s.Total = &v
	return s
}
