// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package spark

import (
	"github.com/matpool/volcengine-go-sdk/volcengine"
	"github.com/matpool/volcengine-go-sdk/volcengine/request"
	"github.com/matpool/volcengine-go-sdk/volcengine/response"
	"github.com/matpool/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeApplicationInstanceCommon = "describeApplicationInstance"

// DescribeApplicationInstanceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeApplicationInstanceCommon operation. The "output" return
// value will be populated with the DescribeApplicationInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeApplicationInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeApplicationInstanceCommon Send returns without error.
//
// See DescribeApplicationInstanceCommon for more information on using the DescribeApplicationInstanceCommon
// API call, and error handling.
//
//	// Example sending a request using the DescribeApplicationInstanceCommonRequest method.
//	req, resp := client.DescribeApplicationInstanceCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *SPARK) DescribeApplicationInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeApplicationInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeApplicationInstanceCommon API operation for SPARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPARK's
// API operation DescribeApplicationInstanceCommon for usage and error information.
func (c *SPARK) DescribeApplicationInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeApplicationInstanceCommonRequest(input)
	return out, req.Send()
}

// DescribeApplicationInstanceCommonWithContext is the same as DescribeApplicationInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeApplicationInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPARK) DescribeApplicationInstanceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeApplicationInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeApplicationInstance = "describeApplicationInstance"

// DescribeApplicationInstanceRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeApplicationInstance operation. The "output" return
// value will be populated with the DescribeApplicationInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeApplicationInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeApplicationInstanceCommon Send returns without error.
//
// See DescribeApplicationInstance for more information on using the DescribeApplicationInstance
// API call, and error handling.
//
//	// Example sending a request using the DescribeApplicationInstanceRequest method.
//	req, resp := client.DescribeApplicationInstanceRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *SPARK) DescribeApplicationInstanceRequest(input *DescribeApplicationInstanceInput) (req *request.Request, output *DescribeApplicationInstanceOutput) {
	op := &request.Operation{
		Name:       opDescribeApplicationInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeApplicationInstanceInput{}
	}

	output = &DescribeApplicationInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeApplicationInstance API operation for SPARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPARK's
// API operation DescribeApplicationInstance for usage and error information.
func (c *SPARK) DescribeApplicationInstance(input *DescribeApplicationInstanceInput) (*DescribeApplicationInstanceOutput, error) {
	req, out := c.DescribeApplicationInstanceRequest(input)
	return out, req.Send()
}

// DescribeApplicationInstanceWithContext is the same as DescribeApplicationInstance with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeApplicationInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPARK) DescribeApplicationInstanceWithContext(ctx volcengine.Context, input *DescribeApplicationInstanceInput, opts ...request.Option) (*DescribeApplicationInstanceOutput, error) {
	req, out := c.DescribeApplicationInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DependencyFordescribeApplicationInstanceOutput struct {
	_ struct{} `type:"structure"`

	Archives []*string `type:"list"`

	Files []*string `type:"list"`

	Jars []*string `type:"list"`

	PyFiles []*string `type:"list"`
}

// String returns the string representation
func (s DependencyFordescribeApplicationInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DependencyFordescribeApplicationInstanceOutput) GoString() string {
	return s.String()
}

// SetArchives sets the Archives field's value.
func (s *DependencyFordescribeApplicationInstanceOutput) SetArchives(v []*string) *DependencyFordescribeApplicationInstanceOutput {
	s.Archives = v
	return s
}

// SetFiles sets the Files field's value.
func (s *DependencyFordescribeApplicationInstanceOutput) SetFiles(v []*string) *DependencyFordescribeApplicationInstanceOutput {
	s.Files = v
	return s
}

// SetJars sets the Jars field's value.
func (s *DependencyFordescribeApplicationInstanceOutput) SetJars(v []*string) *DependencyFordescribeApplicationInstanceOutput {
	s.Jars = v
	return s
}

// SetPyFiles sets the PyFiles field's value.
func (s *DependencyFordescribeApplicationInstanceOutput) SetPyFiles(v []*string) *DependencyFordescribeApplicationInstanceOutput {
	s.PyFiles = v
	return s
}

type DeployRequestFordescribeApplicationInstanceOutput struct {
	_ struct{} `type:"structure"`

	Priority *string `type:"string"`

	ResourcePoolTrn *string `type:"string"`

	SchedulePolicy *string `type:"string"`

	ScheduleTimeout *string `type:"string"`
}

// String returns the string representation
func (s DeployRequestFordescribeApplicationInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeployRequestFordescribeApplicationInstanceOutput) GoString() string {
	return s.String()
}

// SetPriority sets the Priority field's value.
func (s *DeployRequestFordescribeApplicationInstanceOutput) SetPriority(v string) *DeployRequestFordescribeApplicationInstanceOutput {
	s.Priority = &v
	return s
}

// SetResourcePoolTrn sets the ResourcePoolTrn field's value.
func (s *DeployRequestFordescribeApplicationInstanceOutput) SetResourcePoolTrn(v string) *DeployRequestFordescribeApplicationInstanceOutput {
	s.ResourcePoolTrn = &v
	return s
}

// SetSchedulePolicy sets the SchedulePolicy field's value.
func (s *DeployRequestFordescribeApplicationInstanceOutput) SetSchedulePolicy(v string) *DeployRequestFordescribeApplicationInstanceOutput {
	s.SchedulePolicy = &v
	return s
}

// SetScheduleTimeout sets the ScheduleTimeout field's value.
func (s *DeployRequestFordescribeApplicationInstanceOutput) SetScheduleTimeout(v string) *DeployRequestFordescribeApplicationInstanceOutput {
	s.ScheduleTimeout = &v
	return s
}

type DescribeApplicationInstanceInput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	Id *int64 `type:"int64"`

	InstanceId *int64 `type:"int64"`

	JobType *string `type:"string" enum:"EnumOfJobTypeFordescribeApplicationInstanceInput"`

	ProjectId *string `type:"string"`

	UniqueKey *string `type:"string"`

	UserId *string `type:"string"`
}

// String returns the string representation
func (s DescribeApplicationInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeApplicationInstanceInput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DescribeApplicationInstanceInput) SetAccountId(v string) *DescribeApplicationInstanceInput {
	s.AccountId = &v
	return s
}

// SetId sets the Id field's value.
func (s *DescribeApplicationInstanceInput) SetId(v int64) *DescribeApplicationInstanceInput {
	s.Id = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeApplicationInstanceInput) SetInstanceId(v int64) *DescribeApplicationInstanceInput {
	s.InstanceId = &v
	return s
}

// SetJobType sets the JobType field's value.
func (s *DescribeApplicationInstanceInput) SetJobType(v string) *DescribeApplicationInstanceInput {
	s.JobType = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *DescribeApplicationInstanceInput) SetProjectId(v string) *DescribeApplicationInstanceInput {
	s.ProjectId = &v
	return s
}

// SetUniqueKey sets the UniqueKey field's value.
func (s *DescribeApplicationInstanceInput) SetUniqueKey(v string) *DescribeApplicationInstanceInput {
	s.UniqueKey = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *DescribeApplicationInstanceInput) SetUserId(v string) *DescribeApplicationInstanceInput {
	s.UserId = &v
	return s
}

type DescribeApplicationInstanceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountId *string `type:"string"`

	AppDraftId *int64 `type:"int64"`

	ApplicationName *string `type:"string"`

	ApplicationTrn *string `type:"string"`

	ApplicationType *string `type:"string"`

	Args *string `type:"string"`

	Cluster *string `type:"string"`

	Conf map[string]*string `type:"map"`

	Dependency *DependencyFordescribeApplicationInstanceOutput `type:"structure"`

	DeployRequest *DeployRequestFordescribeApplicationInstanceOutput `type:"structure"`

	DeploymentId *string `type:"string"`

	Duration *int64 `type:"int64"`

	EndTime *string `type:"string"`

	EngineVersion *string `type:"string"`

	Image *string `type:"string"`

	InstanceId *string `type:"string"`

	Jar *string `type:"string"`

	LastCheckTime *string `type:"string"`

	MainClass *string `type:"string"`

	ProjectId *string `type:"string"`

	RestUrl *string `type:"string"`

	SqlText *string `type:"string"`

	StartTime *string `type:"string"`

	State *string `type:"string"`

	UniqueKey *string `type:"string"`

	UserId *string `type:"string"`

	VersionId *int64 `type:"int64"`
}

// String returns the string representation
func (s DescribeApplicationInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeApplicationInstanceOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DescribeApplicationInstanceOutput) SetAccountId(v string) *DescribeApplicationInstanceOutput {
	s.AccountId = &v
	return s
}

// SetAppDraftId sets the AppDraftId field's value.
func (s *DescribeApplicationInstanceOutput) SetAppDraftId(v int64) *DescribeApplicationInstanceOutput {
	s.AppDraftId = &v
	return s
}

// SetApplicationName sets the ApplicationName field's value.
func (s *DescribeApplicationInstanceOutput) SetApplicationName(v string) *DescribeApplicationInstanceOutput {
	s.ApplicationName = &v
	return s
}

// SetApplicationTrn sets the ApplicationTrn field's value.
func (s *DescribeApplicationInstanceOutput) SetApplicationTrn(v string) *DescribeApplicationInstanceOutput {
	s.ApplicationTrn = &v
	return s
}

// SetApplicationType sets the ApplicationType field's value.
func (s *DescribeApplicationInstanceOutput) SetApplicationType(v string) *DescribeApplicationInstanceOutput {
	s.ApplicationType = &v
	return s
}

// SetArgs sets the Args field's value.
func (s *DescribeApplicationInstanceOutput) SetArgs(v string) *DescribeApplicationInstanceOutput {
	s.Args = &v
	return s
}

// SetCluster sets the Cluster field's value.
func (s *DescribeApplicationInstanceOutput) SetCluster(v string) *DescribeApplicationInstanceOutput {
	s.Cluster = &v
	return s
}

// SetConf sets the Conf field's value.
func (s *DescribeApplicationInstanceOutput) SetConf(v map[string]*string) *DescribeApplicationInstanceOutput {
	s.Conf = v
	return s
}

// SetDependency sets the Dependency field's value.
func (s *DescribeApplicationInstanceOutput) SetDependency(v *DependencyFordescribeApplicationInstanceOutput) *DescribeApplicationInstanceOutput {
	s.Dependency = v
	return s
}

// SetDeployRequest sets the DeployRequest field's value.
func (s *DescribeApplicationInstanceOutput) SetDeployRequest(v *DeployRequestFordescribeApplicationInstanceOutput) *DescribeApplicationInstanceOutput {
	s.DeployRequest = v
	return s
}

// SetDeploymentId sets the DeploymentId field's value.
func (s *DescribeApplicationInstanceOutput) SetDeploymentId(v string) *DescribeApplicationInstanceOutput {
	s.DeploymentId = &v
	return s
}

// SetDuration sets the Duration field's value.
func (s *DescribeApplicationInstanceOutput) SetDuration(v int64) *DescribeApplicationInstanceOutput {
	s.Duration = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeApplicationInstanceOutput) SetEndTime(v string) *DescribeApplicationInstanceOutput {
	s.EndTime = &v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *DescribeApplicationInstanceOutput) SetEngineVersion(v string) *DescribeApplicationInstanceOutput {
	s.EngineVersion = &v
	return s
}

// SetImage sets the Image field's value.
func (s *DescribeApplicationInstanceOutput) SetImage(v string) *DescribeApplicationInstanceOutput {
	s.Image = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeApplicationInstanceOutput) SetInstanceId(v string) *DescribeApplicationInstanceOutput {
	s.InstanceId = &v
	return s
}

// SetJar sets the Jar field's value.
func (s *DescribeApplicationInstanceOutput) SetJar(v string) *DescribeApplicationInstanceOutput {
	s.Jar = &v
	return s
}

// SetLastCheckTime sets the LastCheckTime field's value.
func (s *DescribeApplicationInstanceOutput) SetLastCheckTime(v string) *DescribeApplicationInstanceOutput {
	s.LastCheckTime = &v
	return s
}

// SetMainClass sets the MainClass field's value.
func (s *DescribeApplicationInstanceOutput) SetMainClass(v string) *DescribeApplicationInstanceOutput {
	s.MainClass = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *DescribeApplicationInstanceOutput) SetProjectId(v string) *DescribeApplicationInstanceOutput {
	s.ProjectId = &v
	return s
}

// SetRestUrl sets the RestUrl field's value.
func (s *DescribeApplicationInstanceOutput) SetRestUrl(v string) *DescribeApplicationInstanceOutput {
	s.RestUrl = &v
	return s
}

// SetSqlText sets the SqlText field's value.
func (s *DescribeApplicationInstanceOutput) SetSqlText(v string) *DescribeApplicationInstanceOutput {
	s.SqlText = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeApplicationInstanceOutput) SetStartTime(v string) *DescribeApplicationInstanceOutput {
	s.StartTime = &v
	return s
}

// SetState sets the State field's value.
func (s *DescribeApplicationInstanceOutput) SetState(v string) *DescribeApplicationInstanceOutput {
	s.State = &v
	return s
}

// SetUniqueKey sets the UniqueKey field's value.
func (s *DescribeApplicationInstanceOutput) SetUniqueKey(v string) *DescribeApplicationInstanceOutput {
	s.UniqueKey = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *DescribeApplicationInstanceOutput) SetUserId(v string) *DescribeApplicationInstanceOutput {
	s.UserId = &v
	return s
}

// SetVersionId sets the VersionId field's value.
func (s *DescribeApplicationInstanceOutput) SetVersionId(v int64) *DescribeApplicationInstanceOutput {
	s.VersionId = &v
	return s
}

const (
	// EnumOfJobTypeFordescribeApplicationInstanceInputFlinkStreamingJar is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputFlinkStreamingJar = "FLINK_STREAMING_JAR"

	// EnumOfJobTypeFordescribeApplicationInstanceInputFlinkStreamingSql is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputFlinkStreamingSql = "FLINK_STREAMING_SQL"

	// EnumOfJobTypeFordescribeApplicationInstanceInputSparkBatchJar is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputSparkBatchJar = "SPARK_BATCH_JAR"

	// EnumOfJobTypeFordescribeApplicationInstanceInputSparkBatchSql is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputSparkBatchSql = "SPARK_BATCH_SQL"

	// EnumOfJobTypeFordescribeApplicationInstanceInputFlinkBatchSql is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputFlinkBatchSql = "FLINK_BATCH_SQL"

	// EnumOfJobTypeFordescribeApplicationInstanceInputRayJob is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputRayJob = "RAY_JOB"

	// EnumOfJobTypeFordescribeApplicationInstanceInputFlinkBatchJar is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputFlinkBatchJar = "FLINK_BATCH_JAR"

	// EnumOfJobTypeFordescribeApplicationInstanceInputPrimusStreamingJob is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputPrimusStreamingJob = "PRIMUS_STREAMING_JOB"

	// EnumOfJobTypeFordescribeApplicationInstanceInputJupyterNotebook is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputJupyterNotebook = "JUPYTER_NOTEBOOK"

	// EnumOfJobTypeFordescribeApplicationInstanceInputSparkBatchPython is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputSparkBatchPython = "SPARK_BATCH_PYTHON"

	// EnumOfJobTypeFordescribeApplicationInstanceInputSyncStreaming is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputSyncStreaming = "SYNC_STREAMING"

	// EnumOfJobTypeFordescribeApplicationInstanceInputSyncBatch is a EnumOfJobTypeFordescribeApplicationInstanceInput enum value
	EnumOfJobTypeFordescribeApplicationInstanceInputSyncBatch = "SYNC_BATCH"
)
